[{"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\index.js":"1","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\App.js":"2","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\reportWebVitals.js":"3","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\BarChart.js":"4","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\index.js":"5","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\App.js":"6","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\reportWebVitals.js":"7","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\BarChart.js":"8","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\ParallelView.js":"9","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\GenreView.js":"10","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\YearView.js":"11","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\PopularityView.js":"12","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\YearDetailView.js":"13","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\RadarView.js":"14","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\Top10SongView.js":"15","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\Top10ArtistView.js":"16","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\index.js":"17","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\reportWebVitals.js":"18","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\App.js":"19","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\BarChart.js":"20","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\RadarView.js":"21","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\YearDetailView.js":"22","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\YearView.js":"23","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\Top10SongView.js":"24","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\Top10ArtistView.js":"25","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\ParallelView.js":"26","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\PopularityView.js":"27","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\NumView.js":"28"},{"size":517,"mtime":1610785842928,"results":"29","hashOfConfig":"30"},{"size":645,"mtime":1610785842926,"results":"31","hashOfConfig":"30"},{"size":375,"mtime":1610785842928,"results":"32","hashOfConfig":"30"},{"size":3072,"mtime":1610785842926,"results":"33","hashOfConfig":"30"},{"size":517,"mtime":1610785842928,"results":"34","hashOfConfig":"35"},{"size":4179,"mtime":1612078875838,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1610785842928,"results":"37","hashOfConfig":"35"},{"size":3072,"mtime":1610785842926,"results":"38","hashOfConfig":"35"},{"size":2435,"mtime":1611445219600,"results":"39","hashOfConfig":"35"},{"size":552,"mtime":1611448366092,"results":"40","hashOfConfig":"35"},{"size":13413,"mtime":1612077668943,"results":"41","hashOfConfig":"35"},{"size":2699,"mtime":1611522680906,"results":"42","hashOfConfig":"35"},{"size":13956,"mtime":1612077675696,"results":"43","hashOfConfig":"35"},{"size":1951,"mtime":1611537263965,"results":"44","hashOfConfig":"35"},{"size":5928,"mtime":1611655443677,"results":"45","hashOfConfig":"35"},{"size":7844,"mtime":1611655404724,"results":"46","hashOfConfig":"35"},{"size":517,"mtime":1610785842928,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1610785842928,"results":"49","hashOfConfig":"48"},{"size":6854,"mtime":1613266724056,"results":"50","hashOfConfig":"48"},{"size":3072,"mtime":1610785842926,"results":"51","hashOfConfig":"48"},{"size":1951,"mtime":1611537263965,"results":"52","hashOfConfig":"48"},{"size":16417,"mtime":1613262697246,"results":"53","hashOfConfig":"48"},{"size":13327,"mtime":1613267129825,"results":"54","hashOfConfig":"48"},{"size":8136,"mtime":1613261953822,"results":"55","hashOfConfig":"48"},{"size":10494,"mtime":1613261960847,"results":"56","hashOfConfig":"48"},{"size":2435,"mtime":1611445219600,"results":"57","hashOfConfig":"48"},{"size":2699,"mtime":1611522680906,"results":"58","hashOfConfig":"48"},{"size":540,"mtime":1613264260382,"results":"59","hashOfConfig":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hj0hgp",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1wrkzvx",{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"uyhofc",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\index.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\App.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\reportWebVitals.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\BarChart.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\index.js",[],["128","129"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\App.js",["130","131","132","133","134","135","136","137"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\reportWebVitals.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\BarChart.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\ParallelView.js",["138"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass ParallelView extends Component{\r\n\r\n  componentDidMount(){\r\n    console.log(\"DRAW\");\r\n    this.drawChart();\r\n  }\r\n\r\n  drawChart(){\r\n\r\n    // Parse the Data\r\n    d3.csv(this.props.data).then((data)=>{\r\n      // set the dimensions and margins of the graph\r\n      var margin = {top: 30, right: 50, bottom: 10, left: 50},\r\n      width = 460 - margin.left - margin.right,\r\n      height = 400 - margin.top - margin.bottom;\r\n      \r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#container\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n      console.log(data);\r\n      // Color scale: give me a specie name, I return a color\r\n      var color = d3.scaleOrdinal()\r\n        .domain([\"setosa\", \"versicolor\", \"virginica\" ])\r\n        .range([ \"#440154ff\", \"#21908dff\", \"#fde725ff\"])\r\n\r\n      // Here I set the list of dimension manually to control the order of axis:\r\n      var dimensions = [\"Petal_Length\", \"Petal_Width\", \"Sepal_Length\", \"Sepal_Width\"]\r\n\r\n      var y = {}\r\n      for (var i in dimensions) {\r\n        var name = dimensions[i]\r\n        y[name] = d3.scaleLinear()\r\n          .domain( [0,8])\r\n          .range([height, 0])\r\n      } \r\n      // Build the X scale -> it find the best position for each Y axis\r\n      var x = d3.scalePoint()\r\n        .range([0, width])\r\n        .padding(1)\r\n        .domain(dimensions);\r\n      \r\n      svg.selectAll(\"myAxis\")\r\n        // For each dimension of the dataset I add a 'g' element:\r\n        .data(dimensions).enter()\r\n        .append(\"g\")\r\n        // I translate this element to its right position on the x axis\r\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; })\r\n        // And I build the axis with the call function\r\n        .each(function(d) { d3.select(this).call(d3.axisLeft().scale(y[d])); })\r\n        // Add axis title\r\n        .append(\"text\")\r\n          .style(\"text-anchor\", \"middle\")\r\n          .attr(\"y\", -9)\r\n          .text(function(d) { return d; })\r\n          .style(\"fill\", \"black\")\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id={\"#\" + this.props.id}>FUCK YOU!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParallelView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\GenreView.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\YearView.js",["139","140","141","142","143","144","145"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\PopularityView.js",["146","147","148"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass PopularityView extends Component{\r\n\r\n  componentDidMount(){\r\n    console.log(\"PopularityView\");\r\n    this.drawChart();\r\n  }\r\n\r\n  drawChart(){\r\n    var years = [];\r\n    for(var i=1921; i<= 2020; i++) {\r\n      years.push(i);\r\n    }\r\n\r\n    console.log(years);\r\n    // Parse the Data\r\n    d3.csv(this.props.data).then((data)=>{\r\n      var keys = [\"acousticness\", \"danceability\", \"energy\", \"instrumentalness\", \"liveness\", \"speechiness\", \"tempo\", \"loudness\", \"popularity\", \"valence\"];\r\n      var bounds = [];\r\n      var sums = [];\r\n\r\n      var filteredData = [];\r\n\r\n      for(var i=0; i<data.length; i++) {\r\n        for(var j=0; j<keys.length; j++) {\r\n          data[i][keys[j]] = parseFloat(data[i][keys[j]]);\r\n        }\r\n        if(parseInt(data[i][\"year\"]) == 2020) {\r\n          filteredData.push(data[i]);\r\n        }\r\n      }\r\n\r\n      // set the dimensions and margins of the graph\r\n      var margin = {top: 10, right: 30, bottom: 30, left: 60},\r\n      width = 460 - margin.left - margin.right,\r\n      height = 400 - margin.top - margin.bottom;\r\n\r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#container\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\",\r\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n        // Add X axis\r\n      var x = d3.scaleLinear()\r\n        .domain([0, 100])\r\n        .range([ 0, width ]);\r\n      svg.append(\"g\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x));\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n        .domain([0, 1])\r\n        .range([ height, 0]);\r\n      svg.append(\"g\")\r\n        .call(d3.axisLeft(y));\r\n\r\n      // Add dots\r\n      svg.append('g')\r\n        .selectAll(\"dot\")\r\n        .data(filteredData)\r\n        .enter()\r\n        .append(\"circle\")\r\n          .attr(\"cx\", function (d) { return x(d.popularity); } )\r\n          .attr(\"cy\", function (d) { return y(d.danceability); } )\r\n          .attr(\"r\", 0.8)\r\n          .style(\"fill\", \"#69b3a2\")\r\n      svg.append('g')\r\n        .selectAll(\"dot\")\r\n        .data(filteredData)\r\n        .enter()\r\n        .append(\"circle\")\r\n          .attr(\"cx\", function (d) { return x(d.popularity); } )\r\n          .attr(\"cy\", function (d) { return y(d.energy); } )\r\n          .attr(\"r\", 0.8)\r\n          .style(\"fill\", \"#ff0000\")\r\n     });\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id={\"#\" + this.props.id}>FUCK YOU!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopularityView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\YearDetailView.js",["149","150","151","152","153","154","155","156","157","158"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\RadarView.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\Top10SongView.js",["159","160","161","162","163","164","165","166"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport { select } from 'd3';\r\n\r\nclass Top10SongView extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keys: this.props.keys,\r\n      colors: this.props.colors,\r\n      select: 0,\r\n      year: 2019\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"Top10SongView\");\r\n\r\n    this.props.set_top_10_song(this);\r\n\r\n    this.drawChart();\r\n  }\r\n\r\n  changeSelected(index) {\r\n    console.log(index);\r\n    this.state.select = index;\r\n    this.updateChart();\r\n    var feature = this.state.keys[this.state.select];\r\n    document.getElementById(\"song-subtitle\").textContent = feature.charAt(0).toUpperCase() + feature.slice(1);\r\n  }\r\n\r\n  changeYear(year) {\r\n    this.state.year = year;\r\n    document.getElementById(\"song-year\").textContent = year;\r\n    this.updateChart();\r\n  }\r\n\r\n  drawChart(){\r\n    // Parse the Data\r\n    d3.csv(this.props.data).then((data)=>{\r\n      var keys = this.state.keys;\r\n      var select = this.state.select;\r\n      var i, j;\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        for(j=0; j<keys.length; j++) {\r\n          data[i][keys[j]] = parseFloat(data[i][keys[j]]);\r\n        }\r\n      }\r\n\r\n      var unsorted_array = [];\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        if(parseInt(data[i][\"year\"]) == 2019)\r\n        {\r\n          unsorted_array.push(data[i]);\r\n        }\r\n      }\r\n\r\n      // Reverse\r\n      var top10 = unsorted_array.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n      console.log(top10);\r\n\r\n      // set the dimensions and margins of the graph\r\n      var margin = this.props.size.margin,\r\n      width = this.props.size.width - margin.left - margin.right,\r\n      height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#top-10-song-graph\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // X axis\r\n      var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.name; }))\r\n      .padding(0.2);\r\n      svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([ height, 0]);\r\n      svg.append(\"g\")\r\n      .call(d3.axisLeft(y));\r\n\r\n      // Bars\r\n      svg.selectAll(\"mybar\")\r\n      .data(top10)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", function(d) { return x(d.name); })\r\n        .attr(\"y\", function(d) { return y(d.acousticness); })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"height\", function(d) { return height - y(d.acousticness); })\r\n        .attr(\"fill\", \"#ed0345\")\r\n      \r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -50); // Relative to the y axis.\r\n\r\n      this.setState({\r\n        data: data,\r\n        svg: svg,\r\n        x: x,\r\n        y: y,\r\n        height:height,\r\n        width:width\r\n      });\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  updateChart() {\r\n    var data = this.state.data;\r\n    var svg = this.state.svg;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var colors = this.state.colors;\r\n\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    var unsorted_array = [];\r\n    var i, j;\r\n\r\n    for(i=0; i<data.length; i++) {\r\n      if(parseInt(data[i][\"year\"]) == this.state.year)\r\n      {\r\n        unsorted_array.push(data[i]);\r\n      }\r\n    }\r\n\r\n    // Reverse\r\n    var top10 = unsorted_array.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n\r\n    // set the dimensions and margins of the graph\r\n    var margin = this.props.size.margin,\r\n    width = this.props.size.width - margin.left - margin.right,\r\n    height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n\r\n    var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.name; }))\r\n      .padding(0.2);\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n    .call(d3.axisBottom(x))\r\n    .selectAll(\"text\")\r\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\");\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(y));\r\n\r\n    // Bars\r\n    svg.selectAll(\"mybar\")\r\n    .data(top10)\r\n    .enter()\r\n    .append(\"rect\")\r\n      .attr(\"x\", function(d) { return x(d.name); })\r\n      .attr(\"y\", function(d) { return y(d[keys[select]]); })\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"height\", function(d) { return height - y(d[keys[select]]); })\r\n      .attr(\"fill\", colors[select])\r\n    \r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .text(keys[select])\r\n      .attr('font-weight', 500)\r\n      .attr('font-size', \"0.8em\")\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n      .attr('y', -50); // Relative to the y axis.\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id={this.props.id}>\r\n        <div class=\"title\">Top 10 Songs of&nbsp;<a id=\"song-year\">2019</a></div>\r\n        <div class=\"subtitle\" id=\"song-subtitle\">Acousticness</div>\r\n        <div id=\"top-10-song-graph\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top10SongView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework2\\jimyao\\src\\Top10ArtistView.js",["167","168","169","170","171","172","173","174","175"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass Top10ArtistView extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keys: this.props.keys,\r\n      colors: this.props.colors,\r\n      select: 0,\r\n      year: 2019\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"Top10ArtistView\");\r\n\r\n    this.props.set_top_10_artist(this);\r\n\r\n    this.drawChart();\r\n  }\r\n\r\n  changeSelected(index) {\r\n    console.log(index);\r\n    this.state.select = index;\r\n    this.updateChart();\r\n    var feature = this.state.keys[this.state.select];\r\n    document.getElementById(\"artist-subtitle\").textContent = feature.charAt(0).toUpperCase() + feature.slice(1);\r\n  }\r\n\r\n  changeYear(year) {\r\n    this.state.year = year;\r\n    document.getElementById(\"artist-year\").textContent = year;\r\n    this.updateChart();\r\n  }\r\n\r\n\r\n\r\n  drawChart(){\r\n    // Parse the Data\r\n    d3.csv(this.props.data).then((data)=>{\r\n      d3.csv(this.props.data_by_artist).then((data_by_artist)=>{\r\n      var keys = this.state.keys;\r\n      var select = this.state.select;\r\n      var artists_year = [];\r\n\r\n      var i, j;\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        if(parseInt(data[i][\"year\"]) == 2019)\r\n        {\r\n          try {\r\n            let artists = JSON.parse(data[i].artists.replace(/'/g,\"\\\"\"));\r\n            for(j=0;j<artists.length;j++) {\r\n              artists_year.push(artists[j]);\r\n            }\r\n          }\r\n          catch\r\n          {\r\n            \r\n          }\r\n        }\r\n      }\r\n\r\n      var filtered_data = [];\r\n\r\n      for(i=0; i<data_by_artist.length; i++) {\r\n        if(artists_year.indexOf(data_by_artist[i].artists) != -1)\r\n        {\r\n          filtered_data.push(data_by_artist[i]);\r\n        }\r\n      }\r\n\r\n      console.log(filtered_data);\r\n\r\n      for(i=0; i<filtered_data.length; i++) {\r\n        for(j=0; j<keys.length; j++) {\r\n          filtered_data[i][keys[j]] = parseFloat(filtered_data[i][keys[j]]);\r\n        }\r\n      }\r\n\r\n      var unsorted_array = [];\r\n\r\n      console.log(unsorted_array)\r\n\r\n      // Reverse\r\n      var top10 = filtered_data.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n      console.log(top10);\r\n\r\n      // set the dimensions and margins of the graph\r\n      var margin = this.props.size.margin,\r\n      width = this.props.size.width - margin.left - margin.right,\r\n      height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#top-10-artist-graph\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // X axis\r\n      var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.artists; }))\r\n      .padding(0.2);\r\n      svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n      // svg.append('text')\r\n      // .attr('class', 'axis-label')\r\n      // .text(\"Name\")\r\n      // .attr('font-weight', 500)\r\n      // .attr('font-size', \"0.8em\")\r\n      // .attr('x', margin.left / 2 + (width - margin.left - margin.right) / 2)\r\n      // .attr('y', 250) // Relative to the x axis.\r\n      \r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -50); // Relative to the y axis.\r\n\r\n\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([ height, 0]);\r\n      svg.append(\"g\")\r\n      .call(d3.axisLeft(y))\r\n\r\n      // Bars\r\n      svg.selectAll(\"mybar\")\r\n      .data(top10)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", function(d) { return x(d.artists); })\r\n        .attr(\"y\", function(d) { return y(d.acousticness); })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"height\", function(d) { return height - y(d.acousticness); })\r\n        .attr(\"fill\", \"#ed0345\")\r\n      this.setState({\r\n        data: data,\r\n        data_by_artist: data_by_artist,\r\n        svg: svg,\r\n        x: x,\r\n        y: y,\r\n        height:height,\r\n        width:width,\r\n        margin: margin\r\n      });\r\n    });\r\n\r\n    \r\n  });\r\n\r\n  }\r\n\r\n  updateChart() {\r\n    var data = this.state.data;\r\n    var data_by_artist = this.state.data_by_artist;\r\n    var svg = this.state.svg;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var colors = this.state.colors;\r\n    var height = this.state.height;\r\n    var width = this.state.width;\r\n    var margin = this.state.margin;\r\n\r\n    svg.selectAll(\"*\").remove();\r\n    var artists_year = [];\r\n\r\n      var i, j;\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        if(parseInt(data[i][\"year\"]) == this.state.year)\r\n        {\r\n          try {\r\n            let artists = JSON.parse(data[i].artists.replace(/'/g,\"\\\"\"));\r\n            for(j=0;j<artists.length;j++) {\r\n              artists_year.push(artists[j]);\r\n            }\r\n          }\r\n          catch\r\n          {\r\n            \r\n          }\r\n        }\r\n      }\r\n\r\n      var filtered_data = [];\r\n\r\n      for(i=0; i<data_by_artist.length; i++) {\r\n        if(artists_year.indexOf(data_by_artist[i].artists) != -1)\r\n        {\r\n          filtered_data.push(data_by_artist[i]);\r\n        }\r\n      }\r\n\r\n      var top10 = filtered_data.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n      // X axis\r\n      var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.artists; }))\r\n      .padding(0.2);\r\n      svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([ height, 0]);\r\n      svg.append(\"g\")\r\n      .call(d3.axisLeft(y));\r\n\r\n      // Bars\r\n      svg.selectAll(\"mybar\")\r\n      .data(top10)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", function(d) { return x(d.artists); })\r\n        .attr(\"y\", function(d) { return y(d[keys[select]]); })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"height\", function(d) { return height - y(d[keys[select]]); })\r\n        .attr(\"fill\", colors[select])\r\n\r\n      // svg.append('text')\r\n      //   .attr('class', 'axis-label')\r\n      //   .text(\"Name\")\r\n      //   .attr('font-weight', 500)\r\n      //   .attr('font-size', \"0.8em\")\r\n      //   .attr('x', margin.left / 2 + (width - margin.left - margin.right) / 2)\r\n      //   .attr('y', 250) // Relative to the x axis.\r\n        \r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -50); // Relative to the y axis.\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div id={this.props.id}>\r\n        <div class=\"title\">Top 10 Artists of&nbsp;<a id=\"artist-year\">2019</a></div>\r\n        <div class=\"subtitle\" id=\"artist-subtitle\">Acousticness</div>\r\n        <div id=\"top-10-artist-graph\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top10ArtistView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\index.js",[],["176","177"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\reportWebVitals.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\App.js",["178","179","180","181","182","183","184","185"],"import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport BarChart from './BarChart';\r\nimport ParallelView from './ParallelView'\r\n// import data from  './datasets/SF_Historical_Ballot_Measures.csv';\r\nimport data from './datasets/data.csv';\r\nimport data_by_year from './datasets/data_by_year.csv';\r\nimport data_w_genres from  './datasets/data_w_genres.csv';\r\nimport data_by_artist from  './datasets/data_by_artist.csv';\r\nimport iris_data from './datasets/iris.csv';\r\nimport './App.css';\r\nimport YearView from './YearView';\r\nimport PopularityView from './PopularityView';\r\nimport YearDetailView from './YearDetailView';\r\nimport RadarView from './RadarView';\r\nimport Top10SongView from './Top10SongView';\r\nimport Top10ArtistView from './Top10ArtistView';\r\nimport { timeThursdays } from 'd3';\r\n\r\nconst { Sider, Content, Footer } = Layout;\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      data: data,\r\n      data_by_year: data_by_year,\r\n      data_w_genres: data_w_genres,\r\n      data_by_artist: data_by_artist,\r\n      iris_data: iris_data,\r\n      innerWidth: window.innerWidth,\r\n      innerHeight: window.innerHeight,\r\n      maxWidth: 1500,\r\n      keys: [\"acousticness\", \"danceability\", \"energy\", \"instrumentalness\", \"liveness\", \"valence\"],\r\n      colors: ['#e75656','#3c97da','#9dd866','#7a5ebc','#f6c85f','#8dddd0','#a65628','#1a1334', '#aa88cc', '#22bb88'],\r\n      change_year: (posX)=>{\r\n        var year = Math.round(posX / this.state.year_view.state.width * this.state.year_view.state.scale + this.state.year_view.state.curMinYear);\r\n        // this.state.year_view.state.curYear = year;\r\n        // this.state.year_view.updateChart();\r\n        this.state.top_10_song.changeYear(year);\r\n        this.state.top_10_artist.changeYear(year);\r\n      },\r\n      update_cur_year: (posX)=> {\r\n        return Math.round(posX / this.state.year_view.state.width * this.state.year_view.state.scale + this.state.year_view.state.curMinYear);\r\n      },\r\n      get_selected_year_data: (posX) => {\r\n        var year = Math.round(posX / this.state.year_view.state.width * this.state.year_view.state.scale + this.state.year_view.state.curMinYear);\r\n        if(year < 1921) {year = 1921};\r\n        if(year > 2020) {year = 2020};\r\n        return this.state.year_view.state.data[year-1921];\r\n      },\r\n      change_selected: (index)=>{\r\n        console.log(index);\r\n        this.state.top_10_song.changeSelected(index);\r\n        this.state.top_10_artist.changeSelected(index);\r\n      },\r\n      change_scale: (deltaY, posX)=>{\r\n        console.log(this.state.year_view.state.scale);\r\n        if(deltaY <= 0)\r\n        {\r\n          this.state.year_view.state.scale -= 10;\r\n          if(this.state.year_view.state.scale < this.state.year_view.state.minScale) {\r\n            this.state.year_view.state.scale = this.state.year_view.state.minScale;\r\n          }\r\n        }\r\n        else if(deltaY > 0)\r\n        {\r\n          this.state.year_view.state.scale += 10;\r\n          if(this.state.year_view.state.scale > this.state.year_view.state.maxScale) {\r\n            this.state.year_view.state.scale = this.state.year_view.state.maxScale;\r\n          }\r\n        }\r\n\r\n        this.state.year_view.state.curYear = Math.round(posX / this.state.year_view.state.width * this.state.year_view.state.scale + this.state.year_view.state.curMinYear);\r\n        console.log(this.state.year_view.state.curYear);\r\n        this.state.year_view.updateChart();\r\n      },\r\n      change_key: (index) =>{\r\n        this.state.year_detail_view.state.change_keys(index);\r\n      },\r\n      update_hover: (index)=>{\r\n        console.log(index);\r\n        this.state.year_view.state.hover = index;\r\n        this.state.year_view.updateChart();\r\n      },\r\n      set_top_10_song: (ref)=>{this.state.top_10_song = ref;},\r\n      set_top_10_artist: (ref)=>{this.state.top_10_artist = ref;},\r\n      set_year_view: (ref)=>{this.state.year_view = ref;},\r\n      set_year_detail_view: (ref)=>{this.state.year_detail_view = ref;},\r\n      id: \"chart-1\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var handleResize = () => {\r\n      console.log('resized to: ', window.innerWidth, 'x', window.innerHeight);\r\n      this.setState({ innerWidth: window.innerWidth });\r\n      console.log(this.state.innerWidth);\r\n      this.forceUpdate();\r\n      this.render();\r\n    }\r\n  \r\n    window.addEventListener('resize', handleResize)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      // <div className=\"App\">\r\n      //   <h2>ECS 272 Assignment 3 D3 Template</h2>\r\n      //   <div id=\"container\"> \r\n      //   <div id=\"tooltip\"></div>\r\n      //   </div>\r\n      //   <BarChart data={this.state.data} width={this.state.width} height={this.state.height} />\r\n      // </div>\r\n      \r\n      <div id=\"app\">\r\n        <header>\r\n          <h1>Spotify Music Audio Features Dataset 1921-2020</h1>\r\n        </header>\r\n        <div id=\"pad\"></div>\r\n        <div id=\"display\">\r\n          <div id=\"left-view\">\r\n            <YearView\r\n              id=\"year-view\"\r\n              change_year={this.state.change_year}\r\n              change_scale={this.state.change_scale} \r\n              set_year_view={this.state.set_year_view}\r\n              update_cur_year={this.state.update_cur_year}\r\n              change_key = {this.state.change_key}\r\n              update_hover = {this.state.update_hover}\r\n              get_selected_year_data = {this.state.get_selected_year_data}\r\n              size={{width: \"850\", height:\"400\", margin:{left:50, right:40, top:20, bottom:40}}} \r\n              data={this.state.data} \r\n              data_by_year={this.state.data_by_year} \r\n              keys={this.state.keys} \r\n              colors={this.state.colors}>\r\n            </YearView>\r\n            <YearDetailView id=\"year-detail-view\" change_selected={this.state.change_selected} set_year_detail_view={this.state.set_year_detail_view} size={{width: \"850\", height:\"200\", margin:{left:50, right:40, top:20, bottom:40}}} data={this.state.data} data_by_year={this.state.data_by_year} keys={this.state.keys} colors={this.state.colors}></YearDetailView>\r\n          </div>\r\n          <div id=\"right-view\">\r\n            <Top10SongView id=\"top-10-song-view\" set_top_10_song={this.state.set_top_10_song} size={{width:\"400\", height:\"300\", margin:{left:80, right:40, top:40, bottom:100}}} data={this.state.data} data_by_year={this.state.data_by_year} keys={this.state.keys} colors={this.state.colors}></Top10SongView>\r\n            <Top10ArtistView id=\"top-10-artist-view\" set_top_10_artist={this.state.set_top_10_artist} size={{width:\"400\", height:\"300\", margin:{left:80, right:40, top:40, bottom:100}}} data={this.state.data} data_by_artist={this.state.data_by_artist} keys={this.state.keys} colors={this.state.colors}></Top10ArtistView>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\BarChart.js",[],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\RadarView.js",[],["186","187"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\YearDetailView.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass YearDetailView extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keys: this.props.keys,\r\n      colors: this.props.colors,\r\n      select: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"YearDetailView\");\r\n\r\n    this.props.set_year_detail_view(this);\r\n\r\n    for(var i=0; i<this.state.keys.length; i++) {\r\n      document.getElementById(\"toggle-detail-\"+ this.state.keys[i]).style.color = (i==this.state.select) ? this.state.colors[i] : \"#dddddd\";\r\n    }\r\n\r\n    console.log(this.state.keys);\r\n    var changeKeys = (index)=>{\r\n      this.state.select = index;\r\n      for(var i=0; i<this.state.keys.length; i++) {\r\n        document.getElementById(\"toggle-detail-\"+ this.state.keys[i]).style.color = (i==index) ? this.state.colors[i] : \"#dddddd\";\r\n      }\r\n      this.props.change_selected(index);\r\n      this.updateChart();\r\n    };\r\n    this.state.change_keys = changeKeys;\r\n    document.getElementById(\"toggle-detail-acousticness\").addEventListener('click', ()=>{changeKeys(0)});\r\n    document.getElementById(\"toggle-detail-danceability\").addEventListener('click', ()=>{changeKeys(1)});\r\n    document.getElementById(\"toggle-detail-energy\").addEventListener('click', ()=>{changeKeys(2)});\r\n    document.getElementById(\"toggle-detail-instrumentalness\").addEventListener('click', ()=>{changeKeys(3)});\r\n    document.getElementById(\"toggle-detail-liveness\").addEventListener('click', ()=>{changeKeys(4)});\r\n    document.getElementById(\"toggle-detail-valence\").addEventListener('click', ()=>{changeKeys(5)});\r\n\r\n    this.drawChart();\r\n  }\r\n\r\n  drawChart(){\r\n    // Parse the Data\r\n    d3.csv(this.props.data).then((data)=>{\r\n      d3.csv(this.props.data_by_year).then((data_by_year)=>{\r\n      var keys = [\"acousticness\", \"danceability\", \"energy\", \"instrumentalness\", \"liveness\", \"speechiness\", \"tempo\", \"loudness\", \"popularity\", \"valence\"];\r\n      var bounds = [];\r\n      var sums = [];\r\n\r\n      var filteredData = [];\r\n\r\n      for(var i=0; i<data.length; i++) {\r\n        for(var j=0; j<keys.length; j++) {\r\n          data[i][keys[j]] = parseFloat(data[i][keys[j]]);\r\n        }\r\n        // if(parseInt(data[i][\"year\"]) == 2020) {\r\n        //   filteredData.push(data[i]);\r\n        // }\r\n      }\r\n\r\n      for(var i=0; i<data_by_year.length; i++) {\r\n        for(var j=0; j<keys.length; j++) {\r\n          data_by_year[i][keys[j]] = parseFloat(data_by_year[i][keys[j]]);\r\n        }\r\n      }\r\n\r\n      // set the dimensions and margins of the graph\r\n      var margin = this.props.size.margin,\r\n      width = this.props.size.width - margin.left - margin.right,\r\n      height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#year-detail-view-graph\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\",\r\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // Add X axis\r\n      var x = d3.scaleTime()\r\n        .domain([new Date(1921, 1, 1), new Date(2020, 1, 1)])\r\n        .range([ 0, width ]);\r\n\r\n      svg.append(\"g\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x).ticks(15));\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n        .domain([0, 1])\r\n        .range([ height, 0]);\r\n      svg.append(\"g\")\r\n        .call(d3.axisLeft(y));\r\n\r\n      // define the clipPath\r\n      svg.append(\"clipPath\")       // define a clip path\r\n      .attr(\"id\", \"clip\") // give the clipPath an ID\r\n      .append(\"rect\")          // shape it as an ellipse\r\n      .attr(\"x\", 0)        // position the left of the rectangle\r\n      .attr(\"y\", 0)  \r\n      .attr(\"height\", height)    // set the height\r\n      .attr(\"width\", width);    // set the width\r\n\r\n      //Container for the gradients\r\n      var defs = svg.append(\"defs\");\r\n\r\n      //Filter for the outside glow\r\n      var glow_filter = defs.append(\"filter\")\r\n          .attr(\"id\",\"glow\");\r\n      glow_filter.append(\"feGaussianBlur\")\r\n          .attr(\"stdDeviation\",\"20\")\r\n          .attr(\"result\",\"coloredBlur\");\r\n      var feMerge = glow_filter.append(\"feMerge\");\r\n        feMerge.append(\"feMergeNode\")\r\n            .attr(\"in\",\"coloredBlur\");\r\n        feMerge.append(\"feMergeNode\")\r\n            .attr(\"in\",\"SourceGraphic\");\r\n\r\n        // create filter with id #drop-shadow\r\n        // height=130% so that the shadow is not clipped\r\n      var shadow_filter = defs.append(\"filter\")\r\n        .attr(\"id\", \"drop-shadow\")\r\n        .attr(\"height\", \"130%\");\r\n\r\n        // SourceAlpha refers to opacity of graphic that this filter will be applied to\r\n        // convolve that with a Gaussian with standard deviation 3 and store result\r\n        // in blur\r\n        shadow_filter.append(\"feGaussianBlur\")\r\n        .attr(\"in\", \"SourceAlpha\")\r\n        .attr(\"stdDeviation\", 1)\r\n        .attr(\"result\", \"blur\");\r\n\r\n        // translate output of Gaussian blur to the right and downwards with 2px\r\n        // store result in offsetBlur\r\n        shadow_filter.append(\"feOffset\")\r\n        .attr(\"in\", \"blur\")\r\n        .attr(\"dx\", 0)\r\n        .attr(\"dy\", 0)\r\n        .attr(\"result\", \"offsetBlur\");\r\n\r\n        // overlay original SourceGraphic over translated blurred opacity by using\r\n        // feMerge filter. Order of specifying inputs is important!\r\n      var feMerge = shadow_filter.append(\"feMerge\");\r\n\r\n      feMerge.append(\"feMergeNode\")\r\n        .attr(\"in\", \"offsetBlur\")\r\n      feMerge.append(\"feMergeNode\")\r\n        .attr(\"in\", \"SourceGraphic\");\r\n\r\n      var line = d3.line()\r\n        .x(function(d, i) { return x(new Date(d.year, 1, 1)); }) // set the x values for the line generator\r\n        .y(function(d) { return y(d.acousticness); }) // set the y values for the line generator \r\n        .curve(d3.curveMonotoneX)\r\n\r\n      var line_path = svg.append(\"path\")\r\n        .datum(data_by_year) // 10. Binds data to the line \r\n        .attr(\"clip-path\", \"url(#clip)\")\r\n        .attr(\"class\", \"line\") // Assign a class for styling \r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"#ffffff\")\r\n        .attr(\"stroke-width\", 1.5)\r\n        .style(\"filter\", \"url(#drop-shadow)\")\r\n        .attr(\"d\", line);\r\n\r\n      // svg.append(\"path\")\r\n      //   .datum(data_by_year)\r\n      //   .attr(\"fill\", \"none\")\r\n      //   .attr(\"stroke\", \"steelblue\")\r\n      //   .attr(\"stroke-width\", 1.5)\r\n      //   .attr(\"d\", d3.line()\r\n      //     .x(function(d) { return x(new Date(d.year, 1, 1)) })\r\n      //     .y(function(d) { return y(d.energy) })\r\n      //     )\r\n\r\n      var color = d3.scaleLinear()\r\n        .domain([0, 1]) // Points per square pixel.\r\n        .range([\"white\", this.state.colors[0]])\r\n\r\n      var densityData = d3.contourDensity()\r\n        .x(function(d) { return x(new Date(d.year, 1, 1)); })\r\n        .y(function(d) { return y(d.acousticness); })\r\n        .size([width, height])\r\n        .bandwidth(15)\r\n        (data)\r\n\r\n\r\n\r\n      svg.insert(\"g\", \"g\")\r\n        .attr('id', 'graph')\r\n        .selectAll(\"path\")\r\n        .data(densityData)\r\n        .enter().append(\"path\")\r\n          .attr(\"clip-path\", \"url(#clip)\")\r\n          .attr(\"d\", d3.geoPath())\r\n          .style(\"filter\", \"url(#glow)\")\r\n          .attr(\"fill\", function(d) { return color(d.value); })\r\n\r\n          svg.append('text')\r\n          .attr('class', 'axis-label')\r\n          .text(\"Year\")\r\n          .attr('font-weight', 500)\r\n          .attr('font-size', \"0.8em\")\r\n          .attr('x', margin.left / 2 + (width - margin.left - margin.right) / 2)\r\n          .attr('y', 175) // Relative to the x axis.\r\n          \r\n          svg.append('text')\r\n          .attr('class', 'axis-label')\r\n          .text(\"acousticness\")\r\n          .attr('font-weight', 500)\r\n          .attr('font-size', \"0.8em\")\r\n          .attr('transform', 'rotate(-90)')\r\n          .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - \"acousticness\".length * 2)\r\n          .attr('y', -32); // Relative to the y axis.\r\n\r\n      this.setState({\r\n        data: data,\r\n        data_by_year: data_by_year,\r\n        svg: svg,\r\n        x: x,\r\n        y: y,\r\n        height:height,\r\n        width:width,\r\n        glow_filter:glow_filter,\r\n        shadow_filter:shadow_filter,\r\n        defs:defs,\r\n        margin: margin,\r\n        ling_path: line_path,\r\n        line: line\r\n      });\r\n     });\r\n    });\r\n  }\r\n\r\n  updateChart() {\r\n    var data = this.state.data;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var height = this.state.height;\r\n    var width = this.state.width;\r\n    var svg = this.state.svg;\r\n    var colors = this.state.colors;\r\n    var line_path = this.state.line_path;\r\n    var data_by_year = this.state.data_by_year;\r\n    var line = this.state.line;\r\n    var margin = this.state.margin;\r\n\r\n\r\n    var densityData = d3.contourDensity()\r\n      .x(function(d) { return x(new Date(d.year, 1, 1)); })\r\n      .y(function(d) { return y(d[keys[select]]); })\r\n      .size([width, height])\r\n      .bandwidth(15)\r\n      (data)\r\n\r\n      var color = d3.scaleLinear()\r\n      .domain([0, 1]) // Points per square pixel.\r\n      .range([\"white\", colors[select]])\r\n\r\n      svg.selectAll(\"#graph\")\r\n          .attr('opacity', 1)\r\n          .transition()\r\n          .duration(1000)\r\n          .attr('opacity', 0)\r\n          .remove();\r\n          \r\n\r\n      svg.insert(\"g\", \"g\")\r\n      .attr('id', 'graph')\r\n      .selectAll(\"path\")\r\n      .data(densityData)\r\n      .enter()\r\n      .append(\"path\")\r\n        .attr(\"clip-path\", \"url(#clip)\")\r\n        .attr(\"d\", d3.geoPath())\r\n        .style(\"filter\", \"url(#glow)\")\r\n        .attr(\"fill\", function(d) { return color(d.value); })\r\n        .attr('opacity', 0)\r\n        .transition()\r\n        .duration(1000)\r\n        .attr('opacity', 1);\r\n\r\n      var line = d3.line()\r\n        .x(function(d, i) { return x(new Date(d.year, 1, 1)); }) // set the x values for the line generator\r\n        .y(function(d) { return y(d[keys[select]]); }) // set the y values for the line generator \r\n        .curve(d3.curveMonotoneX)\r\n\r\n      svg.selectAll(\".line\")\r\n      .transition()\r\n      .duration(1000)\r\n        .attr(\"d\", line);\r\n\r\n      svg.selectAll(\".axis-label\").remove();\r\n      \r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -32); // Relative to the y axis.\r\n  }\r\n\r\n  updateChart_old() {\r\n    var svg = this.state.svg;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var height = this.state.height;\r\n    var width = this.state.width;\r\n    var data = this.state.data;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var colors = this.state.colors;\r\n    var data_by_year = this.state.data_by_year;\r\n    var margin = this.state.margin;\r\n\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    //Container for the gradients\r\n    var defs = svg.append(\"defs\");\r\n\r\n    //Filter for the outside glow\r\n    var glow_filter = defs.append(\"filter\")\r\n        .attr(\"id\",\"glow\");\r\n    glow_filter.append(\"feGaussianBlur\")\r\n        .attr(\"stdDeviation\",\"20\")\r\n        .attr(\"result\",\"coloredBlur\");\r\n    var feMerge = glow_filter.append(\"feMerge\");\r\n      feMerge.append(\"feMergeNode\")\r\n          .attr(\"in\",\"coloredBlur\");\r\n      feMerge.append(\"feMergeNode\")\r\n          .attr(\"in\",\"SourceGraphic\");\r\n\r\n      // create filter with id #drop-shadow\r\n      // height=130% so that the shadow is not clipped\r\n    var shadow_filter = defs.append(\"filter\")\r\n      .attr(\"id\", \"drop-shadow\")\r\n      .attr(\"height\", \"130%\");\r\n\r\n      // SourceAlpha refers to opacity of graphic that this filter will be applied to\r\n      // convolve that with a Gaussian with standard deviation 3 and store result\r\n      // in blur\r\n      shadow_filter.append(\"feGaussianBlur\")\r\n      .attr(\"in\", \"SourceAlpha\")\r\n      .attr(\"stdDeviation\", 1)\r\n      .attr(\"result\", \"blur\");\r\n\r\n      // translate output of Gaussian blur to the right and downwards with 2px\r\n      // store result in offsetBlur\r\n      shadow_filter.append(\"feOffset\")\r\n      .attr(\"in\", \"blur\")\r\n      .attr(\"dx\", 0)\r\n      .attr(\"dy\", 0)\r\n      .attr(\"result\", \"offsetBlur\");\r\n\r\n      // overlay original SourceGraphic over translated blurred opacity by using\r\n      // feMerge filter. Order of specifying inputs is important!\r\n    var feMerge = shadow_filter.append(\"feMerge\");\r\n\r\n    feMerge.append(\"feMergeNode\")\r\n      .attr(\"in\", \"offsetBlur\")\r\n    feMerge.append(\"feMergeNode\")\r\n      .attr(\"in\", \"SourceGraphic\");\r\n\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x).ticks(15));\r\n    svg.append(\"g\")\r\n      .call(d3.axisLeft(y));\r\n\r\n    // define the clipPath\r\n    svg.append(\"clipPath\")       // define a clip path\r\n    .attr(\"id\", \"clip\") // give the clipPath an ID\r\n    .append(\"rect\")          // shape it as an ellipse\r\n    .attr(\"x\", 0)        // position the left of the rectangle\r\n    .attr(\"y\", 0)  \r\n    .attr(\"height\", height)    // set the height\r\n    .attr(\"width\", width);    // set the width\r\n\r\n    var line = d3.line()\r\n    .x(function(d, i) { return x(new Date(d.year, 1, 1)); }) // set the x values for the line generator\r\n    .y(function(d) { return y(d[keys[select]]); }) // set the y values for the line generator \r\n    .curve(d3.curveMonotoneX)\r\n\r\n    svg.append(\"path\")\r\n      .datum(data_by_year) // 10. Binds data to the line \r\n      .attr(\"clip-path\", \"url(#clip)\")\r\n      .attr(\"class\", \"line\") // Assign a class for styling \r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#ffffff\")\r\n      .attr(\"stroke-width\", 1.5)\r\n      .style(\"filter\", \"url(#drop-shadow)\")\r\n      .attr(\"d\", line);\r\n\r\n    var color = d3.scaleLinear()\r\n    .domain([0, 1]) // Points per square pixel.\r\n    .range([\"white\", colors[select]])\r\n\r\n    var densityData = d3.contourDensity()\r\n      .x(function(d) { return x(new Date(d.year, 1, 1)); })\r\n      .y(function(d) { return y(d[keys[select]]); })\r\n      .size([width, height])\r\n      .bandwidth(15)\r\n      (data)\r\n\r\n    svg.insert(\"g\", \"g\")\r\n      .selectAll(\"path\")\r\n      .data(densityData)\r\n      .enter().append(\"path\")\r\n        .attr(\"clip-path\", \"url(#clip)\")\r\n        .attr(\"d\", d3.geoPath())\r\n        .style(\"filter\", \"url(#glow)\")\r\n        .attr(\"fill\", function(d) { return color(d.value); })\r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(\"Year\")\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('x', margin.left / 2 + (width - margin.left - margin.right) / 2)\r\n        .attr('y', 175) // Relative to the x axis.\r\n      \r\n        svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -32); // Relative to the y axis.\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id={this.props.id}>\r\n        <div class=\"title\">Trend of Selected Audio Feature</div>\r\n        <div class=\"subtitle\">Line reflects its trend / Background represents sample density</div>\r\n        <div id=\"year-detail-view-content\">\r\n          <div id=\"year-detail-view-graph\"></div>\r\n          <div id=\"toggle-panel\">\r\n            <div>&nbsp;</div>\r\n            <div class=\"toggle-btn\" id=\"toggle-detail-acousticness\">Acousticness</div>\r\n            <div class=\"toggle-btn\" id=\"toggle-detail-danceability\">Danceability</div>\r\n            <div class=\"toggle-btn\" id=\"toggle-detail-energy\">Energy</div>\r\n            <div class=\"toggle-btn\" id=\"toggle-detail-instrumentalness\">Instrumentalness</div>\r\n            <div class=\"toggle-btn\" id=\"toggle-detail-liveness\">Liveness</div>\r\n            <div class=\"toggle-btn\" id=\"toggle-detail-valence\">Valence</div>\r\n            <div class=\"toggle-hint\">Choose Feature</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default YearDetailView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\YearView.js",["202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport { json } from 'd3';\r\n\r\nclass YearView extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keys: this.props.keys,\r\n      colors: this.props.colors,\r\n      mask: [1,1,1,1,1,1],\r\n      scale: 100,\r\n      maxScale: 100,\r\n      minScale: 10,\r\n      minYear: 1921,\r\n      maxYear: 2020,\r\n      curMinYear: 1921,\r\n      curMaxYear: 2020,\r\n      curYear: 1960\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"YearView\");\r\n\r\n    this.props.set_year_view(this);\r\n\r\n    for(var i=0; i<this.state.keys.length; i++) {\r\n      document.getElementById(\"toggle-\"+ this.state.keys[i]).style.color = (this.state.mask[i]) ? this.state.colors[i]: \"#dddddd\";\r\n    }\r\n\r\n    var changeKeys = (index)=>{\r\n      if(this.state.mask[index] == 1) {\r\n        this.state.mask[index] = 0;\r\n      } else {\r\n        this.state.mask[index] = 1;\r\n      }\r\n      for(var i=0; i<this.state.keys.length; i++) {\r\n        document.getElementById(\"toggle-\"+ this.state.keys[i]).style.color = (this.state.mask[i]) ? this.state.colors[i]: \"#dddddd\";\r\n      }\r\n      \r\n      this.updateChart();\r\n    };\r\n\r\n    document.getElementById(\"toggle-acousticness\").addEventListener('click', ()=>{changeKeys(0)});\r\n    document.getElementById(\"toggle-danceability\").addEventListener('click', ()=>{changeKeys(1)});\r\n    document.getElementById(\"toggle-energy\").addEventListener('click', ()=>{changeKeys(2)});\r\n    document.getElementById(\"toggle-instrumentalness\").addEventListener('click', ()=>{changeKeys(3)});\r\n    document.getElementById(\"toggle-liveness\").addEventListener('click', ()=>{changeKeys(4)});\r\n    document.getElementById(\"toggle-valence\").addEventListener('click', ()=>{changeKeys(5)});\r\n    this.drawChart(); \r\n  }\r\n\r\n  drawChart(){\r\n    \r\n    // Parse the Data\r\n    d3.csv(this.props.data_by_year).then((data)=>{\r\n      var keys = [];\r\n      var colors = [];\r\n\r\n      for(var i=0; i<this.state.keys.length; i++) {\r\n        if(this.state.mask[i] == 1) {\r\n          keys.push(this.state.keys[i]);\r\n          colors.push(this.state.colors[i]);\r\n        }\r\n      }\r\n\r\n      console.log(data);\r\n\r\n      // set the dimensions and margins of the graph\r\n      var margin = this.props.size.margin,\r\n      width = this.props.size.width - margin.left - margin.right,\r\n      height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#year-view-graph\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // Add X axis\r\n      var x = d3.scaleTime()\r\n        .domain([new Date(1921, 1, 1), new Date(2020, 1, 1)])\r\n        .range([ 0, width ]);\r\n\r\n\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n        .domain([-2, 2])\r\n        .range([ height, 0 ]);\r\n        \r\n\r\n      // color palette\r\n      var color = d3.scaleOrdinal()\r\n        .domain(keys)\r\n        .range(colors)\r\n\r\n      //stack the data?\r\n      var stackedData = d3.stack()\r\n        .offset(d3.stackOffsetSilhouette)\r\n        .keys(keys)\r\n        (data)\r\n\r\n      console.log(stackedData);\r\n      \r\n      var layers = svg\r\n      .selectAll(\"mylayers\");\r\n\r\n      var path = svg.selectAll(\"path\");\r\n\r\n      var area = d3.area()\r\n      .x(function(d, i) { return x(new Date(d.data.year, 1, 1)); })\r\n      .y0(function(d) { return y(d[0]); })\r\n      .y1(function(d) { return y(d[1]); })\r\n      .curve(d3.curveBasis);\r\n    \r\n      svg.append(\"clipPath\")       // define a clip path\r\n      .attr(\"id\", \"year-view-clip\") // give the clipPath an ID\r\n      .append(\"rect\")          // shape it as an ellipse\r\n      .attr(\"x\", 0)        // position the left of the rectangle\r\n      .attr(\"y\", 0)  \r\n      .attr(\"height\", height)    // set the height\r\n      .attr(\"width\", width);    // set the width\r\n\r\n      // Show the areas\r\n      layers\r\n        .data(stackedData)\r\n        .enter()\r\n        .append(\"path\")\r\n          .attr(\"class\", \"layer\")\r\n          .attr(\"clip-path\", \"url(#year-view-clip)\")\r\n          .style(\"fill\", function(d) { return color(d.key); })\r\n          .style(\"cursor\", \"pointer\")\r\n          .attr(\"d\", area);\r\n\r\n      var update_hover = this.props.update_hover;\r\n\r\n      svg.selectAll(\".layer\")\r\n      .attr(\"opacity\", 1)\r\n      .on(\"mouseover\", (event, d)=>{\r\n        console.log(event);\r\n        // var i = svg.selectAll(\".layer\").nodes().indexOf(event.path[0]);\r\n        var i = svg.selectAll(\".layer\").nodes().indexOf(event.target);\r\n        // svg.selectAll(\".layer\").transition()\r\n        //   .duration(50)\r\n        //   .attr(\"opacity\", function(d, j) {\r\n        //     return j != i ? 0.7 : 1;\r\n        //   })\r\n        update_hover(i);\r\n      })\r\n      .on(\"mouseleave\", ()=>{\r\n        // svg.selectAll(\".layer\").transition()\r\n        // .duration(50)\r\n        // .attr(\"opacity\", 1)\r\n        update_hover(-1);\r\n      })\r\n      .on(\"click\", (event)=>{\r\n\r\n        // var i = svg.selectAll(\".layer\").nodes().indexOf(event.path[0]);\r\n        var i = svg.selectAll(\".layer\").nodes().indexOf(event.target);\r\n        change_key(i);\r\n      });\r\n\r\n\r\n      var change_year = this.props.change_year;\r\n      var change_scale = this.props.change_scale;\r\n      var update_cur_year = this.props.update_cur_year;\r\n      var change_key = this.props.change_key;\r\n      var get_selected_year_data = this.props.get_selected_year_data;\r\n\r\n      var g = svg.append(\"g\");\r\n\r\n      g\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x).ticks(15));\r\n\r\n      // var mouseG = svg.append(\"g\")\r\n        svg.append(\"path\") // this is the black vertical line to follow mouse\r\n          .attr(\"class\", \"mouse-line\")\r\n          .style(\"stroke\", \"black\")\r\n          .style(\"stroke-width\", \"1px\")\r\n          .style(\"opacity\", \"0\");\r\n\r\n        var text = svg.append(\"text\")\r\n          .attr(\"class\", \"hint\")\r\n          .attr(\"y\", 300)\r\n          .attr(\"dy\", \".5em\")\r\n          .style(\"text-anchor\", \"end\")\r\n          .style(\"font-weight\", 500)\r\n          .style(\"opacity\", \"0\")\r\n          .text(\"Click to select this year\");\r\n        \r\n        d3.select(\"#year-view-graph\")\r\n          .on('mousemove', function(event) { // mouse moving over canvas\r\n            var mouse = d3.pointer(event, this);\r\n            if(mouse[0] < 50 || mouse[0] > 50 + width) {\r\n              d3.select(\".mouse-line\")\r\n              .style(\"opacity\", \"0\");\r\n              d3.select(\".hint\")\r\n              .style(\"opacity\", \"0\");\r\n            }\r\n            else {\r\n              d3.select(\".mouse-line\")\r\n              .style(\"opacity\", \"1\");\r\n              d3.select(\".hint\")\r\n              .style(\"opacity\", \"1\");\r\n            }\r\n            mouse[0] -= 50;\r\n            mouse[1] -= 20;\r\n            d3.select(\".mouse-line\")\r\n              .attr(\"d\", function() {\r\n                var d = \"M\" + (mouse[0] + 5) + \",\" + height;\r\n                d += \" \" + (mouse[0] + 5) + \",\" + 0;\r\n                return d;\r\n              });\r\n            d3.select(\".hint\")\r\n              .attr(\"x\", ()=>{return mouse[0] - 10;})\r\n              .attr(\"y\", ()=>{return mouse[1];})\r\n              .text(()=>{return update_cur_year(mouse[0]);});\r\n            \r\n            var selected_year_data = get_selected_year_data(mouse[0]);\r\n            console.log(selected_year_data);\r\n            var btns = document.getElementsByClassName(\"toggle-btn\");\r\n            for(let i=0; i<btns.length; i++) {\r\n              if(btns[i].getElementsByClassName(\"value\")[0] != undefined) {\r\n                btns[i].getElementsByClassName(\"value\")[0].text = parseFloat(selected_year_data[keys[i]]).toFixed(3);\r\n              }\r\n            }\r\n\r\n            })\r\n\r\n          .on('click', function(event) {\r\n            var mouse = d3.pointer(event);\r\n            mouse[0] -= 50;\r\n            mouse[1] -= 20;\r\n            change_year(mouse[0]);\r\n          })\r\n          .on('wheel', function(event) {\r\n            var mouse = d3.pointer(event);\r\n            mouse[0] -= 50;\r\n            mouse[1] -= 20;\r\n            change_scale(event.deltaY, mouse[0]);\r\n            d3.select(\".hint\")\r\n              .attr(\"x\", ()=>{return mouse[0] - 10;})\r\n              .attr(\"y\", ()=>{return mouse[1];})\r\n              .text(()=>{return update_cur_year(mouse[0]);});\r\n          });\r\n      \r\n        svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(\"Year\")\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('x', margin.left / 2 + (width - margin.left - margin.right) / 2)\r\n        .attr('y', 375) // Relative to the x axis.\r\n\r\n      this.setState({\r\n        data: data,\r\n        svg: svg,\r\n        x: x,\r\n        y: y,\r\n        layers: layers,\r\n        area: area,\r\n        path: path,\r\n        width: width,\r\n        height: height,\r\n        g: g\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  updateData(data, keys, mask) {\r\n    for(let i=0; i<data.length; i++) {\r\n      for(let j=0; j<keys.length; j++) {\r\n        if (mask[j] == 0)\r\n        {\r\n          data[i][keys[j]] = 0;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  updateChart() {\r\n    var keys = this.state.keys;\r\n    var colors = this.state.colors;\r\n    var data = JSON.parse(JSON.stringify(this.state.data));\r\n    var layers = this.state.layers;\r\n    var area = this.state.area;\r\n    var svg = this.state.svg;\r\n    var path = this.state.path;\r\n    var mask = this.state.mask;\r\n\r\n    console.log(data);\r\n    data = this.updateData(data, keys, mask);\r\n\r\n    var margin = this.props.size.margin,\r\n    width = this.props.size.width - margin.left - margin.right,\r\n    height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n    console.log([this.state.curYear, this.state.scale]);\r\n\r\n    if(this.state.curYear - this.state.scale / 2 < this.state.minYear) {\r\n      this.state.curMinYear = this.state.minYear;\r\n      this.state.curMaxYear = this.state.minYear + this.state.scale;\r\n    }\r\n    else if(this.state.curYear + this.state.scale / 2 > this.state.maxYear) {\r\n      this.state.curMaxYear = this.state.maxYear;\r\n      this.state.curMinYear = this.state.maxYear - this.state.scale;\r\n    }\r\n    else {\r\n      this.state.curMaxYear = this.state.curYear + this.state.scale / 2;\r\n      this.state.curMinYear = this.state.curYear - this.state.scale / 2;\r\n    }\r\n\r\n    var hover = this.state.hover;\r\n\r\n    if(hover != -1) {\r\n      svg.selectAll(\".layer\")\r\n      .attr(\"opacity\", function(d, j) {\r\n        return j != hover ? 0.7 : 1;\r\n      })\r\n      .attr(\"stroke\", function(d, j) {\r\n        return j != hover ? \"none\" : \"#222222\";\r\n      })\r\n      .attr(\"stroke-width\", 1.5);\r\n    } else \r\n    {\r\n      svg.selectAll(\".layer\")\r\n      .attr(\"opacity\", 1)\r\n      .attr(\"stroke\", \"none\");\r\n    }\r\n\r\n\r\n\r\n    var x = d3.scaleTime()\r\n      .domain([new Date(this.state.curMinYear, 1, 1), new Date(this.state.curMaxYear, 1, 1)])\r\n      .range([ 0, width ]);\r\n\r\n    // Add Y axis\r\n    var y = d3.scaleLinear()\r\n      .domain([-2, 2])\r\n      .range([ height, 0 ]);\r\n\r\n    area = d3.area()\r\n      .x(function(d, i) { return x(new Date(d.data.year, 1, 1)); })\r\n      .y0(function(d) { return y(d[0]); })\r\n      .y1(function(d) { return y(d[1]); })\r\n      .curve(d3.curveBasis);\r\n\r\n    var stackedData = d3.stack()\r\n      .offset(d3.stackOffsetSilhouette)\r\n      .keys(keys)\r\n      (data)\r\n\r\n    console.log(stackedData);\r\n\r\n    svg\r\n    .selectAll(\"path\")\r\n    .data(stackedData)\r\n    .transition()\r\n        .duration(500)\r\n        .attr(\"d\", area)\r\n\r\n    this.state.g\r\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .transition().duration(500)\r\n      .call(d3.axisBottom(x).ticks(10))\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id={this.props.id}>\r\n        <div class=\"title\">Audio Feature Trends</div>\r\n        <div class=\"subtitle\">Bandwidth of each stream represents the value of each audio feature</div>\r\n        <div id=\"year-view-content\">\r\n          \r\n          <div id=\"year-view-graph\"></div>\r\n          <div id=\"toggle-panel\">\r\n            <div class=\"toggle-help-text\">Toggle to Hide/Show Feature</div>\r\n            <div class=\"toggle-help-text\">Scroll to Zoom In/Out View</div>\r\n            <div class=\"toggle-help-text\">Click to Select Year and Feature</div>\r\n            <div class=\"toggle-help\">Help</div>\r\n            <div>&nbsp;</div>\r\n            <div class=\"toggle-btn\" id=\"toggle-acousticness\">Acousticness <a class=\"value\">0.0</a></div>\r\n            <div class=\"toggle-btn\" id=\"toggle-danceability\">Danceability <a class=\"value\">0.0</a></div>\r\n            <div class=\"toggle-btn\" id=\"toggle-energy\">Energy <a class=\"value\">0.0</a></div>\r\n            <div class=\"toggle-btn\" id=\"toggle-instrumentalness\">Instrumentalness <a class=\"value\">0.0</a></div>\r\n            <div class=\"toggle-btn\" id=\"toggle-liveness\">Liveness <a class=\"value\">0.0</a></div>\r\n            <div class=\"toggle-btn\" id=\"toggle-valence\">Valence <a class=\"value\">0.0</a></div>\r\n            <div class=\"toggle-hint\">Toggle Feature</div>\r\n            <div>&nbsp;</div>\r\n            <div>&nbsp;</div>\r\n            <div>&nbsp;</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default YearView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\Top10SongView.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport { select } from 'd3';\r\n\r\nclass Top10SongView extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keys: this.props.keys,\r\n      colors: this.props.colors,\r\n      select: 0,\r\n      year: 2019\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"Top10SongView\");\r\n\r\n    this.props.set_top_10_song(this);\r\n\r\n    this.drawChart();\r\n  }\r\n\r\n  changeSelected(index) {\r\n    console.log(index);\r\n    this.state.select = index;\r\n    this.updateChart();\r\n    var feature = this.state.keys[this.state.select];\r\n    document.getElementById(\"song-subtitle\").textContent = feature.charAt(0).toUpperCase() + feature.slice(1);\r\n  }\r\n\r\n  changeYear(year) {\r\n    this.state.year = year;\r\n    document.getElementById(\"song-year\").textContent = year;\r\n    this.updateChart();\r\n  }\r\n\r\n  drawChart(){\r\n    // Parse the Data\r\n    d3.csv(this.props.data).then((data)=>{\r\n      var keys = this.state.keys;\r\n      var select = this.state.select;\r\n      var i, j;\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        for(j=0; j<keys.length; j++) {\r\n          data[i][keys[j]] = parseFloat(data[i][keys[j]]);\r\n        }\r\n      }\r\n\r\n      var unsorted_array = [];\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        if(parseInt(data[i][\"year\"]) == 2019)\r\n        {\r\n          unsorted_array.push(data[i]);\r\n        }\r\n      }\r\n\r\n      // Reverse\r\n      var top10 = unsorted_array.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n      console.log(top10);\r\n\r\n      // set the dimensions and margins of the graph\r\n      var margin = this.props.size.margin,\r\n      width = this.props.size.width - margin.left - margin.right,\r\n      height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#top-10-song-graph\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // X axis\r\n      var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.name; }))\r\n      .padding(0.2);\r\n      \r\n      var x_g = svg.append(\"g\")\r\n      .attr(\"class\", \"x-axis\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([ height, 0]);\r\n      svg.append(\"g\")\r\n      .call(d3.axisLeft(y));\r\n\r\n      // Bars\r\n      svg.selectAll(\"mybar\")\r\n      .data(top10)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", function(d) { return x(d.name); })\r\n        .attr(\"y\", function(d) { return y(d.acousticness); })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"height\", function(d) { return height - y(d.acousticness); })\r\n        .attr(\"fill\", this.state.colors[0])\r\n      \r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -50); // Relative to the y axis.\r\n\r\n      this.setState({\r\n        data: data,\r\n        svg: svg,\r\n        x: x,\r\n        y: y,\r\n        height:height,\r\n        width:width,\r\n        margin: margin,\r\n        x_g: x_g\r\n      });\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  updateChart() {\r\n    var data = this.state.data;\r\n    var data_by_artist = this.state.data_by_artist;\r\n    var svg = this.state.svg;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var colors = this.state.colors;\r\n    var height = this.state.height;\r\n    var width = this.state.width;\r\n    var margin = this.state.margin;\r\n    var x_g = this.state.x_g;\r\n\r\n    var unsorted_array = [];\r\n    var i, j;\r\n\r\n    for(i=0; i<data.length; i++) {\r\n      if(parseInt(data[i][\"year\"]) == this.state.year)\r\n      {\r\n        unsorted_array.push(data[i]);\r\n      }\r\n    }\r\n\r\n    // Reverse\r\n    var top10 = unsorted_array.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n    console.log(top10);\r\n    \r\n  \r\n    var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.name; }))\r\n      .padding(0.2);\r\n  \r\n    d3.select('.x-axis').remove();\r\n\r\n    this.state.x_g = svg.append(\"g\")\r\n      .attr(\"class\", \"x-axis\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n    \r\n    svg.selectAll(\"mybar\")\r\n    .data(top10)\r\n      .enter()\r\n      .selectAll(\"rect\")\r\n      .data(top10)\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"x\", function(d) { return x(d.name); })\r\n      .attr(\"y\", function(d) { return y(d[keys[select]]); })\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"height\", function(d) { return height - y(d[keys[select]]); })\r\n      .attr(\"fill\", colors[select]);\r\n    \r\n\r\n    svg.selectAll(\".axis-label\").remove();\r\n\r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .text(keys[select])\r\n      .attr('font-weight', 500)\r\n      .attr('font-size', \"0.8em\")\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n      .attr('y', -50); // Relative to the y axis.\r\n\r\n  }\r\n\r\n  updateChart_old() {\r\n    var data = this.state.data;\r\n    var svg = this.state.svg;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var colors = this.state.colors;\r\n\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    var unsorted_array = [];\r\n    var i, j;\r\n\r\n    for(i=0; i<data.length; i++) {\r\n      if(parseInt(data[i][\"year\"]) == this.state.year)\r\n      {\r\n        unsorted_array.push(data[i]);\r\n      }\r\n    }\r\n\r\n    // Reverse\r\n    var top10 = unsorted_array.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n\r\n    // set the dimensions and margins of the graph\r\n    var margin = this.props.size.margin,\r\n    width = this.props.size.width - margin.left - margin.right,\r\n    height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n\r\n    var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.name; }))\r\n      .padding(0.2);\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n    .call(d3.axisBottom(x))\r\n    .selectAll(\"text\")\r\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\");\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(y));\r\n\r\n    // Bars\r\n    svg.selectAll(\"mybar\")\r\n    .data(top10)\r\n    .enter()\r\n    .append(\"rect\")\r\n      .attr(\"x\", function(d) { return x(d.name); })\r\n      .attr(\"y\", function(d) { return y(d[keys[select]]); })\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"height\", function(d) { return height - y(d[keys[select]]); })\r\n      .attr(\"fill\", colors[select])\r\n    \r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .text(keys[select])\r\n      .attr('font-weight', 500)\r\n      .attr('font-size', \"0.8em\")\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n      .attr('y', -50); // Relative to the y axis.\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id={this.props.id}>\r\n        <div class=\"title\">Top 10 Songs of&nbsp;<a id=\"song-year\">2019</a></div>\r\n        <div class=\"subtitle\" id=\"song-subtitle\">Acousticness</div>\r\n        <div id=\"top-10-song-graph\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top10SongView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\Top10ArtistView.js",["242","243","244","245","246","247","248","249","250","251","252","253","254","255"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass Top10ArtistView extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keys: this.props.keys,\r\n      colors: this.props.colors,\r\n      select: 0,\r\n      year: 2019\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"Top10ArtistView\");\r\n\r\n    this.props.set_top_10_artist(this);\r\n\r\n    this.drawChart();\r\n  }\r\n\r\n  changeSelected(index) {\r\n    console.log(index);\r\n    this.state.select = index;\r\n    this.updateChart();\r\n    var feature = this.state.keys[this.state.select];\r\n    document.getElementById(\"artist-subtitle\").textContent = feature.charAt(0).toUpperCase() + feature.slice(1);\r\n  }\r\n\r\n  changeYear(year) {\r\n    this.state.year = year;\r\n    document.getElementById(\"artist-year\").textContent = year;\r\n    this.updateChart();\r\n  }\r\n\r\n\r\n\r\n  drawChart(){\r\n    // Parse the Data\r\n    d3.csv(this.props.data).then((data)=>{\r\n      d3.csv(this.props.data_by_artist).then((data_by_artist)=>{\r\n      var keys = this.state.keys;\r\n      var select = this.state.select;\r\n      var artists_year = [];\r\n\r\n      var i, j;\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        if(parseInt(data[i][\"year\"]) == 2019)\r\n        {\r\n          try {\r\n            let artists = JSON.parse(data[i].artists.replace(/'/g,\"\\\"\"));\r\n            for(j=0;j<artists.length;j++) {\r\n              artists_year.push(artists[j]);\r\n            }\r\n          }\r\n          catch\r\n          {\r\n            \r\n          }\r\n        }\r\n      }\r\n\r\n      var filtered_data = [];\r\n\r\n      for(i=0; i<data_by_artist.length; i++) {\r\n        if(artists_year.indexOf(data_by_artist[i].artists) != -1)\r\n        {\r\n          filtered_data.push(data_by_artist[i]);\r\n        }\r\n      }\r\n\r\n      console.log(filtered_data);\r\n\r\n      for(i=0; i<filtered_data.length; i++) {\r\n        for(j=0; j<keys.length; j++) {\r\n          filtered_data[i][keys[j]] = parseFloat(filtered_data[i][keys[j]]);\r\n        }\r\n      }\r\n\r\n      var unsorted_array = [];\r\n\r\n      console.log(unsorted_array)\r\n\r\n      // Reverse\r\n      var top10 = filtered_data.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n      // set the dimensions and margins of the graph\r\n      var margin = this.props.size.margin,\r\n      width = this.props.size.width - margin.left - margin.right,\r\n      height = this.props.size.height - margin.top - margin.bottom;\r\n\r\n      // append the svg object to the body of the page\r\n      var svg = d3.select(\"#top-10-artist-graph\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // X axis\r\n      var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.artists; }))\r\n      .padding(0.2);\r\n      \r\n      var x_g = svg.append(\"g\")\r\n      .attr(\"class\", \"x-axis\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n      // svg.append('text')\r\n      // .attr('class', 'axis-label')\r\n      // .text(\"Name\")\r\n      // .attr('font-weight', 500)\r\n      // .attr('font-size', \"0.8em\")\r\n      // .attr('x', margin.left / 2 + (width - margin.left - margin.right) / 2)\r\n      // .attr('y', 250) // Relative to the x axis.\r\n      \r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -50); // Relative to the y axis.\r\n\r\n\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([ height, 0]);\r\n      svg.append(\"g\")\r\n      .call(d3.axisLeft(y))\r\n\r\n      // Bars\r\n      svg.selectAll(\"mybar\")\r\n      .data(top10)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", function(d) { return x(d.artists); })\r\n        .attr(\"y\", function(d) { return y(d.acousticness); })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"height\", function(d) { return height - y(d.acousticness); })\r\n        .attr(\"fill\", this.state.colors[0])\r\n      this.setState({\r\n        data: data,\r\n        data_by_artist: data_by_artist,\r\n        svg: svg,\r\n        x: x,\r\n        y: y,\r\n        height:height,\r\n        width:width,\r\n        margin: margin,\r\n        x_g: x_g\r\n      });\r\n    });\r\n\r\n    \r\n  });\r\n\r\n  }\r\n\r\n  updateChart() {\r\n    var data = this.state.data;\r\n    var data_by_artist = this.state.data_by_artist;\r\n    var svg = this.state.svg;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var colors = this.state.colors;\r\n    var height = this.state.height;\r\n    var width = this.state.width;\r\n    var margin = this.state.margin;\r\n    var x_g = this.state.x_g;\r\n\r\n    var artists_year = [];\r\n\r\n    var i, j;\r\n\r\n    for(i=0; i<data.length; i++) {\r\n      if(parseInt(data[i][\"year\"]) == this.state.year)\r\n      {\r\n        try {\r\n          let artists = JSON.parse(data[i].artists.replace(/'/g,\"\\\"\"));\r\n          for(j=0;j<artists.length;j++) {\r\n            artists_year.push(artists[j]);\r\n          }\r\n        }\r\n        catch\r\n        {\r\n          \r\n        }\r\n      }\r\n    }\r\n\r\n    var filtered_data = [];\r\n\r\n    for(i=0; i<data_by_artist.length; i++) {\r\n      if(artists_year.indexOf(data_by_artist[i].artists) != -1)\r\n      {\r\n        filtered_data.push(data_by_artist[i]);\r\n      }\r\n    }\r\n\r\n    var top10 = filtered_data.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n\r\n    \r\n    var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.artists; }))\r\n      .padding(0.2);\r\n    \r\n    // x_g.remove();\r\n\r\n    svg.selectAll(\".x-axis\").remove();\r\n\r\n    this.state.x_g = svg.append(\"g\")\r\n      .attr(\"class\", \"x-axis\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n    \r\n    svg.selectAll(\"mybar\")\r\n    .data(top10)\r\n      .enter()\r\n      .selectAll(\"rect\")\r\n      .data(top10)\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"x\", function(d) { return x(d.artists); })\r\n      .attr(\"y\", function(d) { return y(d[keys[select]]); })\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"height\", function(d) { return height - y(d[keys[select]]); })\r\n      .attr(\"fill\", colors[select]);\r\n    \r\n\r\n    svg.selectAll(\".axis-label\").remove();\r\n\r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .text(keys[select])\r\n      .attr('font-weight', 500)\r\n      .attr('font-size', \"0.8em\")\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n      .attr('y', -50); // Relative to the y axis.\r\n    \r\n    // this.state.x_g.remove();\r\n    // svg.selectAll(\".x-axis\").remove();\r\n  }\r\n\r\n  updateChart_old() {\r\n    var data = this.state.data;\r\n    var data_by_artist = this.state.data_by_artist;\r\n    var svg = this.state.svg;\r\n    var x = this.state.x;\r\n    var y = this.state.y;\r\n    var keys = this.state.keys;\r\n    var select = this.state.select;\r\n    var colors = this.state.colors;\r\n    var height = this.state.height;\r\n    var width = this.state.width;\r\n    var margin = this.state.margin;\r\n\r\n    svg.selectAll(\"*\").remove();\r\n    var artists_year = [];\r\n\r\n      var i, j;\r\n\r\n      for(i=0; i<data.length; i++) {\r\n        if(parseInt(data[i][\"year\"]) == this.state.year)\r\n        {\r\n          try {\r\n            let artists = JSON.parse(data[i].artists.replace(/'/g,\"\\\"\"));\r\n            for(j=0;j<artists.length;j++) {\r\n              artists_year.push(artists[j]);\r\n            }\r\n          }\r\n          catch\r\n          {\r\n            \r\n          }\r\n        }\r\n      }\r\n\r\n      var filtered_data = [];\r\n\r\n      for(i=0; i<data_by_artist.length; i++) {\r\n        if(artists_year.indexOf(data_by_artist[i].artists) != -1)\r\n        {\r\n          filtered_data.push(data_by_artist[i]);\r\n        }\r\n      }\r\n\r\n      var top10 = filtered_data.sort((a,b)=>{return b[\"popularity\"] - a[\"popularity\"]}).slice(0,10);\r\n      // X axis\r\n      var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(top10.map(function(d) { return d.artists; }))\r\n      .padding(0.2);\r\n      svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x))\r\n      .selectAll(\"text\")\r\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n      // Add Y axis\r\n      var y = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([ height, 0]);\r\n      svg.append(\"g\")\r\n      .call(d3.axisLeft(y));\r\n\r\n      // Bars\r\n      svg.selectAll(\"mybar\")\r\n      .data(top10)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", function(d) { return x(d.artists); })\r\n        .attr(\"y\", function(d) { return y(d[keys[select]]); })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"height\", function(d) { return height - y(d[keys[select]]); })\r\n        .attr(\"fill\", colors[select])\r\n\r\n      // svg.append('text')\r\n      //   .attr('class', 'axis-label')\r\n      //   .text(\"Name\")\r\n      //   .attr('font-weight', 500)\r\n      //   .attr('font-size', \"0.8em\")\r\n      //   .attr('x', margin.left / 2 + (width - margin.left - margin.right) / 2)\r\n      //   .attr('y', 250) // Relative to the x axis.\r\n        \r\n      svg.append('text')\r\n        .attr('class', 'axis-label')\r\n        .text(keys[select])\r\n        .attr('font-weight', 500)\r\n        .attr('font-size', \"0.8em\")\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -(margin.top * 2 + (height - margin.top - margin.bottom) / 2) - keys[select].length * 2)\r\n        .attr('y', -50); // Relative to the y axis.\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div id={this.props.id}>\r\n        <div class=\"title\">Top 10 Artists of&nbsp;<a id=\"artist-year\">2019</a></div>\r\n        <div class=\"subtitle\" id=\"artist-subtitle\">Acousticness</div>\r\n        <div id=\"top-10-artist-graph\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top10ArtistView;","G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\ParallelView.js",["256"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\PopularityView.js",["257","258","259"],"G:\\UC Davis\\ECS 272\\ECS272-Winter2021\\Homework3\\jimyao\\src\\NumView.js",[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"264","severity":1,"message":"268","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":20},{"ruleId":"264","severity":1,"message":"269","line":13,"column":8,"nodeType":"266","messageId":"267","endLine":13,"endColumn":22},{"ruleId":"264","severity":1,"message":"270","line":15,"column":8,"nodeType":"266","messageId":"267","endLine":15,"endColumn":17},{"ruleId":"264","severity":1,"message":"271","line":18,"column":10,"nodeType":"266","messageId":"267","endLine":18,"endColumn":23},{"ruleId":"264","severity":1,"message":"272","line":20,"column":9,"nodeType":"266","messageId":"267","endLine":20,"endColumn":14},{"ruleId":"264","severity":1,"message":"273","line":20,"column":16,"nodeType":"266","messageId":"267","endLine":20,"endColumn":23},{"ruleId":"264","severity":1,"message":"274","line":20,"column":25,"nodeType":"266","messageId":"267","endLine":20,"endColumn":31},{"ruleId":"264","severity":1,"message":"275","line":30,"column":11,"nodeType":"266","messageId":"267","endLine":30,"endColumn":16},{"ruleId":"276","severity":1,"message":"277","line":23,"column":33,"nodeType":"278","messageId":"279","endLine":23,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":24,"column":9,"nodeType":"282","endLine":24,"endColumn":24},{"ruleId":"280","severity":1,"message":"281","line":26,"column":9,"nodeType":"282","endLine":26,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":52,"column":31,"nodeType":"278","messageId":"279","endLine":52,"endColumn":33},{"ruleId":"264","severity":1,"message":"283","line":186,"column":13,"nodeType":"266","messageId":"267","endLine":186,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":259,"column":31,"nodeType":"278","messageId":"279","endLine":259,"endColumn":33},{"ruleId":"264","severity":1,"message":"283","line":324,"column":17,"nodeType":"266","messageId":"267","endLine":324,"endColumn":21},{"ruleId":"264","severity":1,"message":"284","line":21,"column":11,"nodeType":"266","messageId":"267","endLine":21,"endColumn":17},{"ruleId":"264","severity":1,"message":"285","line":22,"column":11,"nodeType":"266","messageId":"267","endLine":22,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":30,"column":38,"nodeType":"278","messageId":"279","endLine":30,"endColumn":40},{"ruleId":"276","severity":1,"message":"277","line":19,"column":85,"nodeType":"278","messageId":"279","endLine":19,"endColumn":87},{"ruleId":"280","severity":1,"message":"281","line":24,"column":7,"nodeType":"282","endLine":24,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":26,"column":87,"nodeType":"278","messageId":"279","endLine":26,"endColumn":89},{"ruleId":"264","severity":1,"message":"284","line":47,"column":11,"nodeType":"266","messageId":"267","endLine":47,"endColumn":17},{"ruleId":"264","severity":1,"message":"285","line":48,"column":11,"nodeType":"266","messageId":"267","endLine":48,"endColumn":15},{"ruleId":"264","severity":1,"message":"286","line":50,"column":11,"nodeType":"266","messageId":"267","endLine":50,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":61,"column":15,"nodeType":"266","messageId":"289","endLine":61,"endColumn":16},{"ruleId":"287","severity":1,"message":"290","line":62,"column":17,"nodeType":"266","messageId":"289","endLine":62,"endColumn":18},{"ruleId":"287","severity":1,"message":"291","line":145,"column":11,"nodeType":"266","messageId":"289","endLine":145,"endColumn":18},{"ruleId":"287","severity":1,"message":"291","line":287,"column":9,"nodeType":"266","messageId":"289","endLine":287,"endColumn":16},{"ruleId":"264","severity":1,"message":"292","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":27,"column":5,"nodeType":"282","endLine":27,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":34,"column":5,"nodeType":"282","endLine":34,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":55,"column":38,"nodeType":"278","messageId":"279","endLine":55,"endColumn":40},{"ruleId":"264","severity":1,"message":"293","line":144,"column":12,"nodeType":"266","messageId":"267","endLine":144,"endColumn":13},{"ruleId":"276","severity":1,"message":"277","line":147,"column":36,"nodeType":"278","messageId":"279","endLine":147,"endColumn":38},{"ruleId":"287","severity":1,"message":"294","line":163,"column":9,"nodeType":"266","messageId":"289","endLine":163,"endColumn":10},{"ruleId":"295","severity":1,"message":"296","line":203,"column":49,"nodeType":"297","endLine":203,"endColumn":67},{"ruleId":"280","severity":1,"message":"281","line":26,"column":5,"nodeType":"282","endLine":26,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":33,"column":5,"nodeType":"282","endLine":33,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":51,"column":38,"nodeType":"278","messageId":"279","endLine":51,"endColumn":40},{"ruleId":"276","severity":1,"message":"298","line":69,"column":60,"nodeType":"278","messageId":"279","endLine":69,"endColumn":62},{"ruleId":"276","severity":1,"message":"277","line":190,"column":38,"nodeType":"278","messageId":"279","endLine":190,"endColumn":40},{"ruleId":"276","severity":1,"message":"298","line":208,"column":60,"nodeType":"278","messageId":"279","endLine":208,"endColumn":62},{"ruleId":"287","severity":1,"message":"294","line":216,"column":11,"nodeType":"266","messageId":"289","endLine":216,"endColumn":12},{"ruleId":"287","severity":1,"message":"299","line":228,"column":11,"nodeType":"266","messageId":"289","endLine":228,"endColumn":12},{"ruleId":"295","severity":1,"message":"296","line":266,"column":51,"nodeType":"297","endLine":266,"endColumn":71},{"ruleId":"260","replacedBy":"300"},{"ruleId":"262","replacedBy":"301"},{"ruleId":"264","severity":1,"message":"265","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"264","severity":1,"message":"268","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":20},{"ruleId":"264","severity":1,"message":"269","line":13,"column":8,"nodeType":"266","messageId":"267","endLine":13,"endColumn":22},{"ruleId":"264","severity":1,"message":"270","line":15,"column":8,"nodeType":"266","messageId":"267","endLine":15,"endColumn":17},{"ruleId":"264","severity":1,"message":"271","line":18,"column":10,"nodeType":"266","messageId":"267","endLine":18,"endColumn":23},{"ruleId":"264","severity":1,"message":"272","line":20,"column":9,"nodeType":"266","messageId":"267","endLine":20,"endColumn":14},{"ruleId":"264","severity":1,"message":"273","line":20,"column":16,"nodeType":"266","messageId":"267","endLine":20,"endColumn":23},{"ruleId":"264","severity":1,"message":"274","line":20,"column":25,"nodeType":"266","messageId":"267","endLine":20,"endColumn":31},{"ruleId":"260","replacedBy":"302"},{"ruleId":"262","replacedBy":"303"},{"ruleId":"276","severity":1,"message":"277","line":21,"column":85,"nodeType":"278","messageId":"279","endLine":21,"endColumn":87},{"ruleId":"280","severity":1,"message":"281","line":26,"column":7,"nodeType":"282","endLine":26,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":28,"column":87,"nodeType":"278","messageId":"279","endLine":28,"endColumn":89},{"ruleId":"280","severity":1,"message":"281","line":33,"column":5,"nodeType":"282","endLine":33,"endColumn":15},{"ruleId":"264","severity":1,"message":"284","line":49,"column":11,"nodeType":"266","messageId":"267","endLine":49,"endColumn":17},{"ruleId":"264","severity":1,"message":"285","line":50,"column":11,"nodeType":"266","messageId":"267","endLine":50,"endColumn":15},{"ruleId":"264","severity":1,"message":"286","line":52,"column":11,"nodeType":"266","messageId":"267","endLine":52,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":63,"column":15,"nodeType":"266","messageId":"289","endLine":63,"endColumn":16},{"ruleId":"287","severity":1,"message":"290","line":64,"column":17,"nodeType":"266","messageId":"289","endLine":64,"endColumn":18},{"ruleId":"287","severity":1,"message":"291","line":147,"column":11,"nodeType":"266","messageId":"289","endLine":147,"endColumn":18},{"ruleId":"264","severity":1,"message":"304","line":248,"column":9,"nodeType":"266","messageId":"267","endLine":248,"endColumn":18},{"ruleId":"264","severity":1,"message":"305","line":249,"column":9,"nodeType":"266","messageId":"267","endLine":249,"endColumn":21},{"ruleId":"287","severity":1,"message":"306","line":288,"column":11,"nodeType":"266","messageId":"289","endLine":288,"endColumn":15},{"ruleId":"287","severity":1,"message":"291","line":364,"column":9,"nodeType":"266","messageId":"289","endLine":364,"endColumn":16},{"ruleId":"264","severity":1,"message":"307","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":34,"column":33,"nodeType":"278","messageId":"279","endLine":34,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":35,"column":9,"nodeType":"282","endLine":35,"endColumn":24},{"ruleId":"280","severity":1,"message":"281","line":37,"column":9,"nodeType":"282","endLine":37,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":63,"column":31,"nodeType":"278","messageId":"279","endLine":63,"endColumn":33},{"ruleId":"264","severity":1,"message":"283","line":189,"column":13,"nodeType":"266","messageId":"267","endLine":189,"endColumn":17},{"ruleId":"276","severity":1,"message":"298","line":230,"column":61,"nodeType":"278","messageId":"279","endLine":230,"endColumn":63},{"ruleId":"276","severity":1,"message":"277","line":281,"column":21,"nodeType":"278","messageId":"279","endLine":281,"endColumn":23},{"ruleId":"264","severity":1,"message":"308","line":292,"column":9,"nodeType":"266","messageId":"267","endLine":292,"endColumn":15},{"ruleId":"264","severity":1,"message":"309","line":294,"column":9,"nodeType":"266","messageId":"267","endLine":294,"endColumn":15},{"ruleId":"264","severity":1,"message":"310","line":297,"column":9,"nodeType":"266","messageId":"267","endLine":297,"endColumn":13},{"ruleId":"280","severity":1,"message":"281","line":310,"column":7,"nodeType":"282","endLine":310,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":311,"column":7,"nodeType":"282","endLine":311,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":314,"column":7,"nodeType":"282","endLine":314,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":315,"column":7,"nodeType":"282","endLine":315,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":318,"column":7,"nodeType":"282","endLine":318,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":319,"column":7,"nodeType":"282","endLine":319,"endColumn":17},{"ruleId":"276","severity":1,"message":"298","line":324,"column":14,"nodeType":"278","messageId":"279","endLine":324,"endColumn":16},{"ruleId":"276","severity":1,"message":"298","line":327,"column":18,"nodeType":"278","messageId":"279","endLine":327,"endColumn":20},{"ruleId":"276","severity":1,"message":"298","line":330,"column":18,"nodeType":"278","messageId":"279","endLine":330,"endColumn":20},{"ruleId":"295","severity":1,"message":"296","line":391,"column":75,"nodeType":"297","endLine":391,"endColumn":92},{"ruleId":"295","severity":1,"message":"296","line":392,"column":75,"nodeType":"297","endLine":392,"endColumn":92},{"ruleId":"295","severity":1,"message":"296","line":393,"column":63,"nodeType":"297","endLine":393,"endColumn":80},{"ruleId":"295","severity":1,"message":"296","line":394,"column":83,"nodeType":"297","endLine":394,"endColumn":100},{"ruleId":"295","severity":1,"message":"296","line":395,"column":67,"nodeType":"297","endLine":395,"endColumn":84},{"ruleId":"295","severity":1,"message":"296","line":396,"column":65,"nodeType":"297","endLine":396,"endColumn":82},{"ruleId":"264","severity":1,"message":"292","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":27,"column":5,"nodeType":"282","endLine":27,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":34,"column":5,"nodeType":"282","endLine":34,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":55,"column":38,"nodeType":"278","messageId":"279","endLine":55,"endColumn":40},{"ruleId":"264","severity":1,"message":"311","line":138,"column":9,"nodeType":"266","messageId":"267","endLine":138,"endColumn":23},{"ruleId":"264","severity":1,"message":"312","line":148,"column":9,"nodeType":"266","messageId":"267","endLine":148,"endColumn":12},{"ruleId":"264","severity":1,"message":"293","line":151,"column":12,"nodeType":"266","messageId":"267","endLine":151,"endColumn":13},{"ruleId":"276","severity":1,"message":"277","line":154,"column":36,"nodeType":"278","messageId":"279","endLine":154,"endColumn":38},{"ruleId":"287","severity":1,"message":"294","line":166,"column":9,"nodeType":"266","messageId":"289","endLine":166,"endColumn":10},{"ruleId":"280","severity":1,"message":"281","line":173,"column":5,"nodeType":"282","endLine":173,"endColumn":15},{"ruleId":"264","severity":1,"message":"293","line":220,"column":12,"nodeType":"266","messageId":"267","endLine":220,"endColumn":13},{"ruleId":"276","severity":1,"message":"277","line":223,"column":36,"nodeType":"278","messageId":"279","endLine":223,"endColumn":38},{"ruleId":"287","severity":1,"message":"294","line":239,"column":9,"nodeType":"266","messageId":"289","endLine":239,"endColumn":10},{"ruleId":"295","severity":1,"message":"296","line":279,"column":49,"nodeType":"297","endLine":279,"endColumn":67},{"ruleId":"280","severity":1,"message":"281","line":26,"column":5,"nodeType":"282","endLine":26,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":33,"column":5,"nodeType":"282","endLine":33,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":51,"column":38,"nodeType":"278","messageId":"279","endLine":51,"endColumn":40},{"ruleId":"276","severity":1,"message":"298","line":69,"column":60,"nodeType":"278","messageId":"279","endLine":69,"endColumn":62},{"ruleId":"264","severity":1,"message":"312","line":184,"column":9,"nodeType":"266","messageId":"267","endLine":184,"endColumn":12},{"ruleId":"276","severity":1,"message":"277","line":191,"column":36,"nodeType":"278","messageId":"279","endLine":191,"endColumn":38},{"ruleId":"276","severity":1,"message":"298","line":209,"column":58,"nodeType":"278","messageId":"279","endLine":209,"endColumn":60},{"ruleId":"287","severity":1,"message":"294","line":218,"column":9,"nodeType":"266","messageId":"289","endLine":218,"endColumn":10},{"ruleId":"280","severity":1,"message":"281","line":227,"column":5,"nodeType":"282","endLine":227,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":283,"column":38,"nodeType":"278","messageId":"279","endLine":283,"endColumn":40},{"ruleId":"276","severity":1,"message":"298","line":301,"column":60,"nodeType":"278","messageId":"279","endLine":301,"endColumn":62},{"ruleId":"287","severity":1,"message":"294","line":309,"column":11,"nodeType":"266","messageId":"289","endLine":309,"endColumn":12},{"ruleId":"287","severity":1,"message":"299","line":321,"column":11,"nodeType":"266","messageId":"289","endLine":321,"endColumn":12},{"ruleId":"295","severity":1,"message":"296","line":359,"column":51,"nodeType":"297","endLine":359,"endColumn":71},{"ruleId":"264","severity":1,"message":"275","line":30,"column":11,"nodeType":"266","messageId":"267","endLine":30,"endColumn":16},{"ruleId":"264","severity":1,"message":"284","line":21,"column":11,"nodeType":"266","messageId":"267","endLine":21,"endColumn":17},{"ruleId":"264","severity":1,"message":"285","line":22,"column":11,"nodeType":"266","messageId":"267","endLine":22,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":30,"column":38,"nodeType":"278","messageId":"279","endLine":30,"endColumn":40},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'BarChart' is defined but never used.","Identifier","unusedVar","'ParallelView' is defined but never used.","'PopularityView' is defined but never used.","'RadarView' is defined but never used.","'timeThursdays' is defined but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'color' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'text' is assigned a value but never used.","'bounds' is assigned a value but never used.","'sums' is assigned a value but never used.","'filteredData' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","'feMerge' is already defined.","'select' is defined but never used.","'j' is defined but never used.","'x' is already defined.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'y' is already defined.",["313"],["314"],["313"],["314"],"'line_path' is assigned a value but never used.","'data_by_year' is assigned a value but never used.","'line' is already defined.","'json' is defined but never used.","'colors' is assigned a value but never used.","'layers' is assigned a value but never used.","'path' is assigned a value but never used.","'data_by_artist' is assigned a value but never used.","'x_g' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]