[{"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\index.js":"1","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\App.js":"2","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\reportWebVitals.js":"3","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\BarChart.js":"4","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\index.js":"5","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\App.js":"6","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\reportWebVitals.js":"7","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart.js":"8","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart2.js":"9","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart3.js":"10","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart4.js":"11"},{"size":517,"mtime":1612034486042,"results":"12","hashOfConfig":"13"},{"size":742,"mtime":1612055237971,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1612034486043,"results":"15","hashOfConfig":"13"},{"size":3072,"mtime":1612034486041,"results":"16","hashOfConfig":"13"},{"size":517,"mtime":1612034486042,"results":"17","hashOfConfig":"18"},{"size":1408,"mtime":1612338149654,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1612034486043,"results":"20","hashOfConfig":"18"},{"size":3108,"mtime":1612208462237,"results":"21","hashOfConfig":"18"},{"size":9863,"mtime":1612329872480,"results":"22","hashOfConfig":"18"},{"size":7702,"mtime":1612333629350,"results":"23","hashOfConfig":"18"},{"size":7052,"mtime":1612338009867,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1tm53gz",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1tztapd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\index.js",[],["54","55"],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\App.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\reportWebVitals.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\Templates\\react-template\\react-d3\\src\\BarChart.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\index.js",[],["56","57"],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\App.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\reportWebVitals.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart.js",[],["58","59"],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart2.js",["60","61"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart2 extends Component {\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart() {\r\n        d3.csv(this.props.data)\r\n            .then(csv => {\r\n                // log csv in browser console\r\n                //console.log(csv);\r\n\r\n                // create data by selecting two columns from csv\r\n                var data = csv.map(row => {\r\n                    return {\r\n                        iyear: Number(row['iyear']),\r\n                        nkill: Number(row['nkill']),\r\n                        nwound: Number(row['nwound']),\r\n                        gname: row['gname']\r\n                    }\r\n                })\r\n\r\n                var filtered = data.filter(function (el) {\r\n                    return (el.gname != \"Unknown\");\r\n                });\r\n\r\n                var holderk = {};\r\n                var holderw = {};\r\n\r\n                filtered.forEach(function(d) {\r\n                    if (holderk.hasOwnProperty(d.iyear)) {\r\n                        holderk[d.iyear] = holderk[d.iyear] + d.nkill;\r\n                    } else {\r\n                        holderk[d.iyear] = d.nkill;\r\n                    }\r\n                    if (holderw.hasOwnProperty(d.iyear)) {\r\n                        holderw[d.iyear] = holderw[d.iyear] + d.nwound;\r\n                    } else {\r\n                        holderw[d.iyear] = d.nwound;\r\n                    }\r\n                });\r\n\r\n                var filtered2 = [];\r\n\r\n                for (var i in holderk) {\r\n                    filtered2.push({ iyear: i, nkill: holderk[i], nwound: holderw[i]});\r\n                }\r\n\r\n                //console.log(filtered2);\r\n\r\n                data = filtered2\r\n\r\n\r\n\r\n\r\n                /*********************************\r\n                 * Visualization codes start here\r\n                 * ********************************/\r\n                var width = 800;\r\n                var height = 600;\r\n                var margin = {left: 60, right: 20, top: 20, bottom: 60}\r\n\r\n                var svg = d3.select('#container')\r\n                    .append('svg')\r\n                    .attr('width', width + margin.left + margin.right)\r\n                    .attr('height', height + margin.top + margin.bottom)\r\n\r\n                var view = svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                var divt = d3.select(\"body\").append(\"div\")\r\n                    .attr(\"class\", \"tooltip\")\r\n                    .style(\"opacity\", 0);\r\n\r\n                //scale functions\r\n                var x = d3.scaleLinear()\r\n                    .domain([d3.min(data, d => d.iyear), d3.max(data, d => d.iyear)])\r\n                    .range([0, width]);\r\n\r\n                var y = d3.scaleLinear()\r\n                    .domain([0, d3.max(data, d => d.nkill)])\r\n                    .range([height, 0]);\r\n\r\n                var tooltip = document.getElementById('tooltip')\r\n                // create a scatter plot\r\n\r\n\r\n                var scatterPlot = view.append(\"g\")\r\n                    .selectAll(\"dot\")\r\n                    .data(data)\r\n                    .enter()\r\n                    .append(\"circle\")\r\n                    .attr(\"cx\", function(d) { return x(d.iyear) } )\r\n                    .attr(\"cy\", function(d) { return y(d.nkill) } )\r\n                    .attr(\"r\", 8)\r\n                    .attr(\"fill\", \"red\")\r\n                    .attr('opacity', 0.8)\r\n\r\n                    .on(\"mouseover\", function(event,d) {\r\n                        //console.log(event);\r\n                        d3.select(this).style('fill', 'black')\r\n                        tooltip.innerHTML = ('In ' + d.iyear + ', A total number of ' + d.nkill +' victims are killed');\r\n                    })\r\n                    .on(\"mouseout\", function(d) {\r\n                        d3.select(this).style('fill', 'red')\r\n                        tooltip.innerHTML = ('hover on a element to show accurate data');\r\n                    });\r\n\r\n                var scatterPlot2 = view.append(\"g\")\r\n                    .selectAll(\"dot\")\r\n                    .data(data)\r\n                    .enter()\r\n                    .append(\"circle\")\r\n                    .attr(\"cx\", function(d) { return x(d.iyear) } )\r\n                    .attr(\"cy\", function(d) { return y(d.nwound) } )\r\n                    .attr(\"r\", 8)\r\n                    .attr(\"fill\", \"orange\")\r\n                    .attr('opacity', 0.8)\r\n\r\n                    .on(\"mouseover\", function(event,d) {\r\n                        //console.log(event);\r\n                        d3.select(this).style('fill', 'black')\r\n                        tooltip.innerHTML = ('In ' + d.iyear + ', A total number of ' + d.nwound +' victims are wounded');\r\n                    })\r\n                    .on(\"mouseout\", function(d) {\r\n                        d3.select(this).style('fill', 'orange')\r\n                        tooltip.innerHTML = ('hover on a element to show accurate data');\r\n                    });\r\n\r\n\r\n                tooltip.innerHTML = ('hover on a element(like points, bars) to show accurate data');\r\n\r\n                var allGroup = [\"Both\", \"Kill Count\", \"Wound Count\"]\r\n\r\n                // add the options to the button\r\n                d3.select(\"#selectButton\")\r\n                    .selectAll('myOptions')\r\n                    .data(allGroup)\r\n                    .enter()\r\n                    .append('option')\r\n                    .text(function (d) { return d; }) // text showed in the menu\r\n                    .attr(\"value\", function (d) { return d; }) // corresponding value returned by the button\r\n                d3.select(\"#selectButton\").on(\"change\", function(d) {\r\n                    // recover the option that has been chosen\r\n                    var selectedOption = d3.select(this).property(\"value\")\r\n                    // run the updateChart function with this selected option\r\n\r\n                    update(selectedOption)\r\n                })\r\n                function update(selectedGroup) {\r\n                    //console.log(selectedGroup)\r\n                    switch (selectedGroup) {\r\n\r\n                        case 'Kill Count':\r\n                            scatterPlot.attr('opacity', 0.8);\r\n                            l1.attr('opacity', 0.8);\r\n                            scatterPlot2.attr('opacity', 0);\r\n                            l2.attr('opacity', 0);\r\n                            break;\r\n\r\n                        case 'Wound Count':\r\n                            scatterPlot.attr('opacity', 0);\r\n                            l1.attr('opacity', 0);\r\n                            scatterPlot2.attr('opacity', 0.8);\r\n                            l2.attr('opacity', 0.8);\r\n                            break;\r\n                        default:\r\n                            scatterPlot.attr('opacity', 0.8);\r\n                            l1.attr('opacity', 0.8);\r\n                            scatterPlot2.attr('opacity', 0.8);\r\n                            l2.attr('opacity', 0.8);\r\n                    }\r\n                }\r\n\r\n                svg.append(\"circle\").attr(\"cx\",200).attr(\"cy\",130).attr(\"r\", 6).style(\"fill\", \"red\")\r\n                svg.append(\"circle\").attr(\"cx\",200).attr(\"cy\",160).attr(\"r\", 6).style(\"fill\", \"orange\")\r\n                svg.append(\"text\").attr(\"x\", 220).attr(\"y\", 130).text(\"Kills\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n                svg.append(\"text\").attr(\"x\", 220).attr(\"y\", 160).text(\"Wounds\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n\r\n                var l1 = view.append(\"path\")\r\n                    .datum(data)\r\n                    .attr(\"fill\", \"none\")\r\n                    .attr(\"stroke\", \"black\")\r\n                    .attr(\"stroke-width\", 2)\r\n                    .attr(\"stroke-dasharray\", \"10,3\")\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n                    .attr('opacity', 0.8)\r\n                    .attr(\"d\", d3.line()\r\n                        .x(function(d) { return x(d.iyear) })\r\n                        .y(function(d) { return y(d.nkill) })\r\n                    )\r\n                var l2 = view.append(\"path\")\r\n                    .datum(data)\r\n                    .attr(\"fill\", \"none\")\r\n                    .attr(\"stroke\", \"gray\")\r\n                    .attr(\"stroke-width\", 2)\r\n                    .attr(\"stroke-dasharray\", \"5,3\")\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n                    .attr('opacity', 0.8)\r\n                    .attr(\"d\", d3.line()\r\n                        .x(function(d) { return x(d.iyear) })\r\n                        .y(function(d) { return y(d.nwound) })\r\n                    )\r\n                // x axis\r\n                view.append(\"g\")\r\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                    .call(d3.axisBottom(x).ticks(10))\r\n                    .append(\"text\")\r\n                    .attr(\"fill\", \"#000\")\r\n                    .attr(\"x\", width / 2)\r\n                    .attr('y', margin.bottom / 2)\r\n                    .attr(\"dy\", \"0.71em\")\r\n                    .attr(\"text-anchor\", \"end\")\r\n                    .text(\"Date of the attack\");\r\n\r\n                // y axis\r\n                view.append(\"g\")\r\n                    .call(d3.axisLeft(y).ticks(10))\r\n                    .append(\"text\")\r\n                    .attr(\"fill\", \"#000\")\r\n                    .attr(\"transform\", \"rotate(-90)\")\r\n                    .attr(\"x\", -height / 2)\r\n                    .attr(\"y\", -margin.left)\r\n                    .attr(\"dy\", \"0.71em\")\r\n                    .attr(\"text-anchor\", \"end\")\r\n                    .text(\"Number of Victims\");\r\n\r\n\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div id={\"#\" + this.props.id}></div>\r\n    }\r\n}\r\n\r\nexport default BarChart2;",["62","63"],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart3.js",["64","65","66","67","68","69"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart3 extends Component {\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart() {\r\n        d3.csv(this.props.data)\r\n            .then(csv => {\r\n                // log csv in browser console\r\n                //console.log(csv);\r\n\r\n                // create data by selecting two columns from csv\r\n                var data = csv.map(row => {\r\n                    return {\r\n                        iyear: Number(row['iyear']),\r\n                        nkill: Number(row['nkill']),\r\n                        nwound: Number(row['nwound']),\r\n                        gname: row['gname']\r\n                    }\r\n                })\r\n\r\n                var filtered = data.filter(function (el) {\r\n                    return (el.gname != \"Unknown\");\r\n                });\r\n\r\n                var holderk = {};\r\n                var holderw = {};\r\n\r\n                filtered.forEach(function (d) {\r\n                    if (holderk.hasOwnProperty(d.gname)) {\r\n                        holderk[d.gname] = holderk[d.gname] + d.nkill;\r\n                    } else {\r\n                        holderk[d.gname] = d.nkill;\r\n                    }\r\n                    if (holderw.hasOwnProperty(d.gname)) {\r\n                        holderw[d.gname] = holderw[d.gname] + d.nwound;\r\n                    } else {\r\n                        holderw[d.gname] = d.nwound;\r\n                    }\r\n                });\r\n\r\n                var filtered2 = [];\r\n\r\n                for (var i in holderk) {\r\n                    filtered2.push({gname: i, nkill: holderk[i], nwound: holderw[i]});\r\n                }\r\n\r\n\r\n                var filtered2 = filtered2.filter(function (el) {\r\n                    return (el.nkill != 0) || (el.nwound != 0);\r\n                });\r\n\r\n\r\n                filtered2 = filtered2.sort(function (a, b) {\r\n                    return b.nkill + b.nwound - a.nkill - a.nwound;\r\n                }).slice(0, 15)\r\n\r\n                data = filtered2;\r\n                console.log(data.slice(0, 10));\r\n\r\n\r\n                /*********************************\r\n                 * Visualization codes start here\r\n                 * ********************************/\r\n                var width = 600;\r\n                var height = 400;\r\n                var margin = {left: 60, right: 20, top: 20, bottom: 60}\r\n\r\n                var svg = d3.select('#container')\r\n                    .append('svg')\r\n                    .attr('width', width + margin.left + margin.right)\r\n                    .attr('height', height + margin.top + margin.bottom)\r\n\r\n                var view = svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                var tooltip = document.getElementById('tooltip')\r\n\r\n                update(10);\r\n\r\n                function update(n) {\r\n                    view.selectAll(\"rect\").remove()\r\n                    view.selectAll(\"g\").remove()\r\n                    data = filtered2.slice(0, Number(n));\r\n                    // X axis\r\n                    var x = d3.scaleBand()\r\n                        .range([0, width])\r\n                        .domain(data.map(function (d) {\r\n                            return d.gname;\r\n                        }))\r\n                        .padding(0.2)\r\n\r\n                    view.append(\"g\")\r\n                        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                        .call(d3.axisBottom(x))\r\n                        .selectAll(\"text\")\r\n                        .style(\"text-anchor\", \"middle\")\r\n                        .attr(\"transform\", \"translate(0,5)rotate(-10)\")\r\n\r\n\r\n\r\n                    var y = d3.scaleLinear()\r\n                        .domain([0, d3.max(data, d => d.nkill)])\r\n                        .range([height, 0]);\r\n\r\n\r\n                    view.append(\"g\")\r\n                        .call(d3.axisLeft(y).ticks(10))\r\n                        .append(\"text\")\r\n                        .attr(\"fill\", \"#000\")\r\n                        .attr(\"transform\", \"rotate(-90)\")\r\n                        .attr(\"x\", -height / 2)\r\n                        .attr(\"y\", -margin.left)\r\n                        .attr(\"dy\", \"0.71em\")\r\n                        .attr(\"text-anchor\", \"end\")\r\n                        .text(\"Number of Victims\");\r\n\r\n                    var bar1 = view.selectAll(\"mybar\")\r\n                        .data(data)\r\n                        .enter()\r\n                        .append(\"rect\")\r\n                        .attr(\"x\", d => {\r\n                            return x(d.gname);\r\n                        })\r\n                        .attr(\"y\", d => {\r\n                            return y(d.nkill);\r\n                        })\r\n                        .attr(\"width\", x.bandwidth())\r\n                        .attr(\"height\", d => {\r\n                            return height - y(d.nkill);\r\n                        })\r\n                        .attr(\"fill\", \"red\")\r\n                        .attr('opacity', 0.5)\r\n                        .attr(\"transform\", \"translate(-5,0)\")\r\n                        .on(\"mouseover\", function (event, d) {\r\n                            //console.log(event);\r\n                            d3.select(this).style('fill', 'black')\r\n                            tooltip.innerHTML = ('In total, by terro-group ' + d.gname + ',  ' + d.nwound + ' victims are killed');\r\n                        })\r\n                        .on(\"mouseout\", function(d) {\r\n                            d3.select(this).style('fill', 'red')\r\n                            tooltip.innerHTML = ('hover on a element to show accurate data');\r\n                        })\r\n                        .exit()\r\n                        .remove();\r\n\r\n                    var bar2 = view.selectAll(\"mybar2\")\r\n                        .data(data)\r\n                        .enter()\r\n                        .append(\"rect\")\r\n                        .attr(\"x\", d => {\r\n                            return x(d.gname);\r\n                        })\r\n                        .attr(\"y\", d => {\r\n                            return y(d.nwound);\r\n                        })\r\n                        .attr(\"width\", x.bandwidth())\r\n                        .attr(\"height\", d => {\r\n                            return height - y(d.nwound);\r\n                        })\r\n                        .attr(\"fill\", \"orange\")\r\n                        .attr('opacity', 0.5)\r\n                        .attr(\"transform\", \"translate(5,0)\")\r\n                        .on(\"mouseover\", function (event, d) {\r\n                            //console.log(event);\r\n                            d3.select(this).style('fill', 'black')\r\n                            tooltip.innerHTML = ('In total, by terro-group ' + d.gname + ', ' + d.nwound + ' victims are wounded');\r\n                        })\r\n                        .on(\"mouseout\", function(d) {\r\n                            d3.select(this).style('fill', 'orange')\r\n                            tooltip.innerHTML = ('hover on a element to show accurate data');\r\n                        })\r\n                        .exit()\r\n                        .remove();\r\n                }\r\n\r\n                d3.select(\"#button1\").on(\"click\", function(d) {\r\n                    update(5)\r\n                })\r\n                d3.select(\"#button2\").on(\"click\", function(d) {\r\n                    update(10)\r\n                })\r\n                d3.select(\"#button3\").on(\"click\", function(d) {\r\n                    update(15)\r\n                })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div id={\"#\" + this.props.id}></div>\r\n    }\r\n}\r\n\r\nexport default BarChart3;","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework2\\ywlu\\react-d3\\src\\BarChart4.js",["70","71","72","73"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart4 extends Component {\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart() {\r\n        d3.csv(this.props.data)\r\n            .then(csv => {\r\n                // log csv in browser console\r\n                //console.log(csv);\r\n\r\n                // create data by selecting two columns from csv\r\n                var data = csv.map(row => {\r\n                    return {\r\n                        iyear: Number(row['iyear']),\r\n                        nkill: Number(row['nkill']),\r\n                        nwound: Number(row['nwound']),\r\n                        region: Number(row['region']),\r\n                        attacktype1: Number(row['attacktype1']),\r\n                        weaptype1: Number(row['weaptype1'])\r\n                    }\r\n                })\r\n\r\n                var filtered = data.filter(function (el) {\r\n                    return (el.nkill > 5) || (el.nwound > 5);\r\n                });\r\n\r\n                data = filtered;\r\n\r\n                var ndict = {\r\n                    \"iyear\": \"time\",\r\n                    \"region\": \"region\",\r\n                    \"weaptype1\": \"weapon\",\r\n                    \"attacktype1\": \"type of attack\",\r\n                    \"nkill\": \"killed victim\",\r\n                    \"nwound\": \"wounded victim\"\r\n\r\n                };\r\n\r\n                var atkdict = {\r\n                    1: \"Assassination\",\r\n                    2: \"Armed Assault\",\r\n                    3: \"Bombing/Explosion\",\r\n                    4: \"Hijacking\",\r\n                    5: \"Hostage Taking I\",\r\n                    6: \"Hostage Taking II\",\r\n                    7: \"Facility Attack\",\r\n                    8: \"Unarmed Assault\",\r\n                    9: \"Unknown\"\r\n                };\r\n\r\n                var regdict = {\r\n                    1: \"North America\",\r\n                    2: \"Central America & C\",\r\n                    3: \"South America\",\r\n                    4: \"East Asia\",\r\n                    5: \"Southeast Asia\",\r\n                    6: \"South Asia\",\r\n                    7: \"Central Asia\",\r\n                    8: \"Western Europe\",\r\n                    9: \"Eastern Europe\",\r\n                    10:\"ME & North Africa\",\r\n                    11:\"Sub-Saharan Africa\",\r\n                    12:\"Australasia & Oceania\"\r\n\r\n                };\r\n\r\n                var weapdict = {\r\n                    1: \"Biological\",\r\n                    2: \"Chemical\",\r\n                    3: \"Radiological\",\r\n                    4: \"???\",\r\n                    5: \"Firearms\",\r\n                    6: \"Explosives\",\r\n                    7: \"Fake Weapons\",\r\n                    8: \"Incendiary\",\r\n                    9: \"Melee\",\r\n                    10:\"Vehicle\",\r\n                    11:\"Sabotage Equipment\",\r\n                    12:\"other\",\r\n                    13:\"unknown\"\r\n\r\n                };\r\n\r\n\r\n                /*********************************\r\n                 * Visualization codes start here\r\n                 * ********************************/\r\n                var width = 800;\r\n                var height = 400;\r\n                var margin = {left: 60, right: 20, top: 20, bottom: 60}\r\n\r\n                var svg = d3.select('#container')\r\n                    .append('svg')\r\n                    .attr('width', width + margin.left + margin.right)\r\n                    .attr('height', height + margin.top + margin.bottom)\r\n\r\n                var view = svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n               // console.log(data[3]);\r\n\r\n                var dimensions = [\r\n                    'iyear',\r\n                    'region',\r\n                    'weaptype1',\r\n                    'attacktype1',\r\n                    'nkill',\r\n                    'nwound'];\r\n\r\n                var y = {}\r\n                var i = 0;\r\n\r\n                for (i in dimensions) {\r\n                    var name = dimensions[i]\r\n                  //  console.log(name)\r\n                    y[name] = d3.scaleLinear()\r\n                        .domain(d3.extent(data, d => {\r\n                            return d[name];\r\n                        }))\r\n                        .range([height, 0])\r\n\r\n                }\r\n\r\n                var x = d3.scalePoint()\r\n                    .range([0, width])\r\n                    .padding(1)\r\n                    .domain(dimensions);\r\n\r\n                function path(d) {\r\n                    return d3.line()(dimensions.map(d1 => {\r\n                        return [x(d1), y[d1](d[d1])];\r\n                    }));\r\n                }\r\n\r\n                view\r\n                    .selectAll(\"myPath\")\r\n                    .data(data)\r\n                    .enter().append(\"path\")\r\n                    .attr(\"d\", path)\r\n                    .style(\"fill\", \"none\")\r\n                    .style(\"stroke\", d => {\r\n                        var cs = d3.scaleLinear()\r\n                            .domain([0, 250, 1500])\r\n                            .range([\"lightyellow\", \"red\", \"black\"]);\r\n\r\n                        return cs(d.nkill)\r\n                    })\r\n                    .style(\"opacity\", 0.1)\r\n                    .attr(\"stroke-width\", 2)\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n\r\n                view.selectAll(\"myAxis\")\r\n                    .data(dimensions).enter()\r\n                    .append(\"g\")\r\n                    .attr(\"transform\", d => {\r\n                        return \"translate(\" + x(d) + \")\";\r\n                    })\r\n                    .each(function (d) {\r\n                        if(d == \"region\"){\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d])\r\n                                .tickFormat(function(d) { return regdict[d]; })\r\n                            );\r\n                        }\r\n                        else if(d == \"attacktype1\"){\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d])\r\n                                .tickFormat(function(d) { return atkdict[d]; })\r\n                            );\r\n                        }\r\n                        else if(d == \"weaptype1\"){\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d])\r\n                                .tickFormat(function(d) { return weapdict[d]; })\r\n                            );\r\n                        }\r\n                        else\r\n                        {\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d]));\r\n                        }\r\n\r\n                    })\r\n\r\n                    .append(\"text\")\r\n                    .style(\"text-anchor\", \"middle\")\r\n                    .attr(\"y\", -10)\r\n                    .text(function (d) {\r\n                        console.log(d)\r\n                        return ndict[d];\r\n                    })\r\n                    .style(\"fill\", \"black\")\r\n\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div id={\"#\" + this.props.id}></div>\r\n    }\r\n}\r\n\r\nexport default BarChart4;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":27,"column":38,"nodeType":"84","messageId":"85","endLine":27,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":74,"column":21,"nodeType":"88","messageId":"89","endLine":74,"endColumn":25},{"ruleId":"74","replacedBy":"90"},{"ruleId":"76","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"83","line":27,"column":38,"nodeType":"84","messageId":"85","endLine":27,"endColumn":40},{"ruleId":"92","severity":1,"message":"93","line":53,"column":21,"nodeType":"88","messageId":"94","endLine":53,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":54,"column":38,"nodeType":"84","messageId":"85","endLine":54,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":54,"column":58,"nodeType":"84","messageId":"85","endLine":54,"endColumn":60},{"ruleId":"86","severity":1,"message":"95","line":122,"column":25,"nodeType":"88","messageId":"89","endLine":122,"endColumn":29},{"ruleId":"86","severity":1,"message":"96","line":151,"column":25,"nodeType":"88","messageId":"89","endLine":151,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":123,"column":49,"nodeType":"99","messageId":"100","endLine":125,"endColumn":26},{"ruleId":"82","severity":1,"message":"101","line":165,"column":30,"nodeType":"84","messageId":"85","endLine":165,"endColumn":32},{"ruleId":"82","severity":1,"message":"101","line":170,"column":35,"nodeType":"84","messageId":"85","endLine":170,"endColumn":37},{"ruleId":"82","severity":1,"message":"101","line":175,"column":35,"nodeType":"84","messageId":"85","endLine":175,"endColumn":37},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],["102"],["103"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'divt' is assigned a value but never used.","Identifier","unusedVar",["102"],["103"],"no-redeclare","'filtered2' is already defined.","redeclared","'bar1' is assigned a value but never used.","'bar2' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'name'.","ArrowFunctionExpression","unsafeRefs","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]